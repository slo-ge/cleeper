{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_wks-define.js","webpack:///./node_modules/core-js/modules/_wks-ext.js","webpack:///./node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/muuri/dist/muuri.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/core-js/modules/es6.object.to-string.js","webpack:///./node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/modules/es6.symbol.js","webpack:///./node_modules/core-js/modules/_meta.js","webpack:///./node_modules/core-js/modules/_enum-keys.js","webpack:///./node_modules/core-js/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/modules/es6.array.for-each.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":[],"mappings":";;;;AAAA,YAAY,mBAAO,CAAC,EAAW;AAC/B,UAAU,mBAAO,CAAC,EAAQ;AAC1B,aAAa,mBAAO,CAAC,CAAW;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;ACLzC,eAAe,mBAAO,CAAC,CAAc;AACrC,qBAAqB,mBAAO,CAAC,EAAmB;AAChD,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C;;AAEA,YAAY,mBAAO,CAAC,CAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;ACfA;AACA,kBAAkB,mBAAO,CAAC,CAAU;AACpC,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;ACHD,aAAa,mBAAO,CAAC,CAAW;AAChC,WAAW,mBAAO,CAAC,EAAS;AAC5B,WAAW,mBAAO,CAAC,CAAS;AAC5B,eAAe,mBAAO,CAAC,CAAa;AACpC,UAAU,mBAAO,CAAC,EAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,uBAAuB;AACzG,iEAAiE;AACjE,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;AC1CA,SAAS,mBAAO,CAAC,CAAc;AAC/B,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,iBAAiB,mBAAO,CAAC,CAAgB;AACzC;AACA,CAAC;AACD;AACA;AACA;;;;;;;ACPA,eAAe,mBAAO,CAAC,CAAc;AACrC;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACNA,aAAa,mBAAO,CAAC,CAAW;AAChC,WAAW,mBAAO,CAAC,CAAS;AAC5B,UAAU,mBAAO,CAAC,EAAQ;AAC1B,UAAU,mBAAO,CAAC,EAAQ;AAC1B;AACA;AACA;;AAEA,mBAAO,CAAC,EAAS;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;;;;;;;AC9BD,uBAAuB;AACvB;AACA;AACA;;;;;;;ACHA;AACA,cAAc,mBAAO,CAAC,EAAY;AAClC,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA;AACA;;;;;;;ACLA,6BAA6B;AAC7B,uCAAuC;;;;;;;ACDvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;;;ACJA;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;;;;;;;ACAA;AACA,YAAY,mBAAO,CAAC,EAAyB;AAC7C,kBAAkB,mBAAO,CAAC,EAAkB;;AAE5C;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA,eAAe,mBAAO,CAAC,CAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;ACJA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC;AACA;AACA,2DAA2D;AAC3D;;;;;;;ACLA,aAAa,mBAAO,CAAC,EAAW;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B;AACA;AACA;;;;;;;ACJA,WAAW,mBAAO,CAAC,EAAS;AAC5B,aAAa,mBAAO,CAAC,CAAW;AAChC;AACA,kDAAkD;;AAElD;AACA,qEAAqE;AACrE,CAAC;AACD;AACA,QAAQ,mBAAO,CAAC,EAAY;AAC5B;AACA,CAAC;;;;;;;ACXD;AACA;AACA;AACA;;;;;;;ACHA,UAAU,mBAAO,CAAC,CAAc;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,UAAU,mBAAO,CAAC,CAAQ;;AAE1B;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;ACNA;AACA,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA;AACA;;;;;;;ACJA,cAAc;;;;;;;ACAd;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B;AACA;AACA;;;;;;;;ACJa;AACb,cAAc,mBAAO,CAAC,EAAY;AAClC,cAAc,mBAAO,CAAC,CAAW;AACjC,eAAe,mBAAO,CAAC,CAAa;AACpC,WAAW,mBAAO,CAAC,CAAS;AAC5B,gBAAgB,mBAAO,CAAC,EAAc;AACtC,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,qBAAqB,mBAAO,CAAC,EAAsB;AACnD,qBAAqB,mBAAO,CAAC,EAAe;AAC5C,eAAe,mBAAO,CAAC,CAAQ;AAC/B,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACpEA,kBAAkB,mBAAO,CAAC,CAAgB,MAAM,mBAAO,CAAC,CAAU;AAClE,+BAA+B,mBAAO,CAAC,EAAe,gBAAgB,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;ACFD,eAAe,mBAAO,CAAC,CAAc;AACrC,eAAe,mBAAO,CAAC,CAAW;AAClC;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;ACHA;AACA,eAAe,mBAAO,CAAC,CAAc;AACrC,UAAU,mBAAO,CAAC,EAAe;AACjC,kBAAkB,mBAAO,CAAC,EAAkB;AAC5C,eAAe,mBAAO,CAAC,EAAe;AACtC,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,EAAe;AACtC;AACA;AACA;AACA;AACA;AACA,EAAE,mBAAO,CAAC,EAAS;AACnB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;ACxCA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,gBAAgB,mBAAO,CAAC,EAAe;AACvC,mBAAmB,mBAAO,CAAC,EAAmB;AAC9C,eAAe,mBAAO,CAAC,EAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B;AACA;AACA;AACA;;;;;;;ACLA;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,UAAU,mBAAO,CAAC,CAAQ;AAC1B;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBa;AACb;AACA,eAAe,mBAAO,CAAC,CAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA,aAAa,mBAAO,CAAC,CAAW;AAChC,WAAW,mBAAO,CAAC,EAAS;AAC5B,cAAc,mBAAO,CAAC,EAAY;AAClC,aAAa,mBAAO,CAAC,EAAY;AACjC,qBAAqB,mBAAO,CAAC,CAAc;AAC3C;AACA,0DAA0D,sBAAsB;AAChF,kFAAkF,wBAAwB;AAC1G;;;;;;;ACRA,YAAY,mBAAO,CAAC,CAAQ;;;;;;;ACA5B;;;;;;;ACAA;AACA,YAAY,mBAAO,CAAC,EAAyB;AAC7C,iBAAiB,mBAAO,CAAC,EAAkB;;AAE3C;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAA4D;AAClE;AACA,SAAS,UAAU,mBAAO,CAAC,EAAU,GAAG;AACxC;AACA,GAAG,MAAM,EAEN;AACH,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,aAAa,EAAE;AACf,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC,aAAa,OAAO;AACpB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,EAAE;AACf,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,yDAAyD;AACxF;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,yDAAyD;AACnF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,MAAM;AACnB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,sBAAsB;AACtaAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,oBAAoB;AACjC,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,wDAAwD;AACvF;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,wDAAwD;AAC/E;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,wDAAwD;AACxF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wEAAwE,sBAAsB;AAC9F;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,aAAa,OAAO;AACpB,aAAa,iCAAiC;AAC9C,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,kBAAkB;AAC/B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO,8BAA8B,oBAAoB;AACtE,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,wBAAwB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,qBAAqB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kCAAkC;AAC/C,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;AACjC,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,aAAa,KAAK;AAClB,aAAa,oBAAoB;AACjC,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB,aAAa,gCAAgC;AAC7C,aAAa,gCAAgC;AAC7C,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,4BAA4B;AACzC,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;AC1kLY;AACb,UAAU,mBAAO,CAAC,EAAc;;AAEhC;AACA,mBAAO,CAAC,EAAgB;AACxB,6BAA6B;AAC7B,cAAc;AACd;AACA,CAAC;AACD;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;AChBD,gBAAgB,mBAAO,CAAC,EAAe;AACvC,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBa;AACb,aAAa,mBAAO,CAAC,EAAkB;AACvC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,qBAAqB,mBAAO,CAAC,EAAsB;AACnD;;AAEA;AACA,mBAAO,CAAC,CAAS,qBAAqB,mBAAO,CAAC,CAAQ,4BAA4B,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;ACZA,SAAS,mBAAO,CAAC,CAAc;AAC/B,eAAe,mBAAO,CAAC,CAAc;AACrC,cAAc,mBAAO,CAAC,EAAgB;;AAEtC,iBAAiB,mBAAO,CAAC,CAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC,eAAe,mBAAO,CAAC,EAAc;AACrC,sBAAsB,mBAAO,CAAC,EAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;ACtBA,gBAAgB,mBAAO,CAAC,EAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA,eAAe,mBAAO,CAAC,CAAW;AAClC;;;;;;;ACDA;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAe;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACZa;AACb,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,CAAW;AACjC,eAAe,mBAAO,CAAC,EAAc;AACrC,WAAW,mBAAO,CAAC,EAAc;AACjC,kBAAkB,mBAAO,CAAC,EAAkB;AAC5C,eAAe,mBAAO,CAAC,EAAc;AACrC,qBAAqB,mBAAO,CAAC,EAAoB;AACjD,gBAAgB,mBAAO,CAAC,EAA4B;;AAEpD,iCAAiC,mBAAO,CAAC,EAAgB,mBAAmB,kBAAkB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC;AACvF;AACA;AACA,KAAK;AACL;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACpCD;AACA,eAAe,mBAAO,CAAC,CAAc;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA,gBAAgB,mBAAO,CAAC,EAAc;AACtC,eAAe,mBAAO,CAAC,CAAQ;AAC/B;;AAEA;AACA;AACA;;;;;;;;ACPa;AACb,sBAAsB,mBAAO,CAAC,CAAc;AAC5C,iBAAiB,mBAAO,CAAC,EAAkB;;AAE3C;AACA;AACA;AACA;;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAY;AAClC,eAAe,mBAAO,CAAC,CAAQ;AAC/B,gBAAgB,mBAAO,CAAC,EAAc;AACtC,iBAAiB,mBAAO,CAAC,EAAS;AAClC;AACA;AACA;AACA;;;;;;;ACPA,eAAe,mBAAO,CAAC,CAAQ;AAC/B;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;ACrBa;AACb,mBAAO,CAAC,EAAoB;AAC5B,eAAe,mBAAO,CAAC,CAAc;AACrC,aAAa,mBAAO,CAAC,EAAU;AAC/B,kBAAkB,mBAAO,CAAC,CAAgB;AAC1C;AACA;;AAEA;AACA,EAAE,mBAAO,CAAC,CAAa;AACvB;;AAEA;AACA,IAAI,mBAAO,CAAC,CAAU,eAAe,wBAAwB,0BAA0B,YAAY,EAAE;AACrG;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;;;;;;;ACxBA;AACA,IAAI,mBAAO,CAAC,CAAgB,wBAAwB,mBAAO,CAAC,CAAc;AAC1E;AACA,OAAO,mBAAO,CAAC,EAAU;AACzB,CAAC;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,mBAAO,CAAC,CAAa;AACvB;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACXa;AACb;AACA,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA,KAAK,mBAAO,CAAC,CAAQ;AACrB;AACA,EAAE,mBAAO,CAAC,CAAa;AACvB;AACA,GAAG;AACH;;;;;;;ACTA,mBAAO,CAAC,EAAe;;;;;;;;ACAV;AACb;AACA,aAAa,mBAAO,CAAC,CAAW;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,kBAAkB,mBAAO,CAAC,CAAgB;AAC1C,cAAc,mBAAO,CAAC,CAAW;AACjC,eAAe,mBAAO,CAAC,CAAa;AACpC,WAAW,mBAAO,CAAC,EAAS;AAC5B,aAAa,mBAAO,CAAC,CAAU;AAC/B,aAAa,mBAAO,CAAC,EAAW;AAChC,qBAAqB,mBAAO,CAAC,EAAsB;AACnD,UAAU,mBAAO,CAAC,EAAQ;AAC1B,UAAU,mBAAO,CAAC,CAAQ;AAC1B,aAAa,mBAAO,CAAC,EAAY;AACjC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,eAAe,mBAAO,CAAC,EAAc;AACrC,cAAc,mBAAO,CAAC,EAAa;AACnC,eAAe,mBAAO,CAAC,CAAc;AACrC,eAAe,mBAAO,CAAC,CAAc;AACrC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,cAAc,mBAAO,CAAC,EAAkB;AACxC,cAAc,mBAAO,CAAC,EAAoB;AAC1C,YAAY,mBAAO,CAAC,EAAgB;AACpC,UAAU,mBAAO,CAAC,CAAc;AAChC,YAAY,mBAAO,CAAC,EAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,sBAAsB,uBAAuB,WAAW,IAAI;AAC5D,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,KAAK;AACL;AACA,sBAAsB,mCAAmC;AACzD,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,mBAAO,CAAC,EAAgB;AAC1B,EAAE,mBAAO,CAAC,EAAe;AACzB,EAAE,mBAAO,CAAC,EAAgB;;AAE1B,sBAAsB,mBAAO,CAAC,EAAY;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,oCAAoC,mBAAO,CAAC,CAAS;AACrD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzOA,WAAW,mBAAO,CAAC,EAAQ;AAC3B,eAAe,mBAAO,CAAC,CAAc;AACrC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,CAAc;AACpC;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,CAAU;AAChC,iDAAiD;AACjD,CAAC;AACD;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,GAAG,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDA;AACA,cAAc,mBAAO,CAAC,EAAgB;AACtC,WAAW,mBAAO,CAAC,EAAgB;AACnC,UAAU,mBAAO,CAAC,EAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACdA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC,WAAW,mBAAO,CAAC,EAAgB;AACnC,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClBA,UAAU,mBAAO,CAAC,EAAe;AACjC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,gBAAgB,mBAAO,CAAC,EAAe;AACvC,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,UAAU,mBAAO,CAAC,EAAQ;AAC1B,qBAAqB,mBAAO,CAAC,EAAmB;AAChD;;AAEA,YAAY,mBAAO,CAAC,CAAgB;AACpC;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,EAAsB;AAC/C,cAAc,mBAAO,CAAC,EAAgB;AACtC,eAAe,mBAAO,CAAC,CAAa;AACpC,aAAa,mBAAO,CAAC,CAAW;AAChC,WAAW,mBAAO,CAAC,CAAS;AAC5B,gBAAgB,mBAAO,CAAC,EAAc;AACtC,UAAU,mBAAO,CAAC,CAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD,wBAAwB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDa;AACb,uBAAuB,mBAAO,CAAC,EAAuB;AACtD,WAAW,mBAAO,CAAC,EAAc;AACjC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA;AACA,kBAAkB,mBAAO,CAAC,CAAQ;AAClC;AACA,0CAA0C,mBAAO,CAAC,CAAS,6BAA6B;AACxF;AACA;AACA;;;;;;;ACNA;AACA,UAAU;AACV;;;;;;;ACFA;AACA,cAAc,mBAAO,CAAC,CAAW;;AAEjC,6BAA6B,UAAU,mBAAO,CAAC,EAAa,GAAG;;;;;;;;ACHlD;AACb;AACA,mBAAO,CAAC,EAAgB;AACxB;AACA;AACA;AACA,CAAC;;;;;;;ACND,cAAc,mBAAO,CAAC,CAAW;AACjC,cAAc,mBAAO,CAAC,EAAY;AAClC,YAAY,mBAAO,CAAC,CAAU;AAC9B,aAAa,mBAAO,CAAC,EAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7BA;AACA;;;;;;;ACDA,cAAc,mBAAO,CAAC,CAAW;AACjC;AACA,iCAAiC,mBAAO,CAAC,CAAgB,cAAc,iBAAiB,mBAAO,CAAC,CAAc,KAAK;;;;;;;;ACFtG;AACb,cAAc,mBAAO,CAAC,CAAW;AACjC,eAAe,mBAAO,CAAC,EAAkB;AACzC,aAAa,mBAAO,CAAC,EAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,EAAY;AAClC,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAc;AACrC,UAAU,mBAAO,CAAC,EAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA,wCAAwC;AACxC;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B,+BAA+B;AAC/B,mCAAmC;AACnC,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA,yBAAyB,mBAAO,CAAC,EAA8B;;AAE/D;AACA;AACA;;;;;;;ACLA,eAAe,mBAAO,CAAC,CAAc;AACrC,cAAc,mBAAO,CAAC,EAAa;AACnC,cAAc,mBAAO,CAAC,CAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACfa;AACb,YAAY,mBAAO,CAAC,CAAU;;AAE9B;AACA;AACA;AACA,yCAAyC,cAAc;AACvD,GAAG;AACH;;;;;;;ACRA;AACA,cAAc,mBAAO,CAAC,CAAW;;AAEjC,gCAAgC,OAAO,mBAAO,CAAC,EAAS,GAAG;;;;;;;;ACH9C;AACb,gBAAgB,mBAAO,CAAC,EAAe;AACvC,eAAe,mBAAO,CAAC,CAAc;AACrC,aAAa,mBAAO,CAAC,EAAW;AAChC;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,GAAG;AACtG;;AAEA,IAAI,IAA0C;AAC9C,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,oGAAC;AACN,CAAC,MAAM,EAIN;;AAED,CAAC","file":"js/1.88bbffed.chunk.js","sourcesContent":["var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = {};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","module.exports = false;\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","exports.f = {}.propertyIsEnumerable;\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = require('./_wks');\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","/**\n * Muuri v0.7.1\n * https://github.com/haltu/muuri\n * Copyright (c) 2015-present, Haltu Oy\n * Released under the MIT license\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\n * @license MIT\n *\n * Muuri Packer\n * Copyright (c) 2016-present, Niklas Rämö <inramo@gmail.com>\n * @license MIT\n *\n * Muuri Ticker / Muuri Emitter / Muuri Queue\n * Copyright (c) 2018-present, Niklas Rämö <inramo@gmail.com>\n * @license MIT\n */\n\n(function (global, factory) {\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    var Hammer;\n    try { Hammer = require('hammerjs') } catch (e) {}\n    module.exports = factory(Hammer);\n  } else {\n    global.Muuri = factory(global.Hammer);\n  }\n}(this, (function (Hammer) {\n  'use strict';\n\n  var namespace = 'Muuri';\n  var gridInstances = {};\n\n  var eventSynchronize = 'synchronize';\n  var eventLayoutStart = 'layoutStart';\n  var eventLayoutEnd = 'layoutEnd';\n  var eventAdd = 'add';\n  var eventRemove = 'remove';\n  var eventShowStart = 'showStart';\n  var eventShowEnd = 'showEnd';\n  var eventHideStart = 'hideStart';\n  var eventHideEnd = 'hideEnd';\n  var eventFilter = 'filter';\n  var eventSort = 'sort';\n  var eventMove = 'move';\n  var eventSend = 'send';\n  var eventBeforeSend = 'beforeSend';\n  var eventReceive = 'receive';\n  var eventBeforeReceive = 'beforeReceive';\n  var eventDragInit = 'dragInit';\n  var eventDragStart = 'dragStart';\n  var eventDragMove = 'dragMove';\n  var eventDragScroll = 'dragScroll';\n  var eventDragEnd = 'dragEnd';\n  var eventDragReleaseStart = 'dragReleaseStart';\n  var eventDragReleaseEnd = 'dragReleaseEnd';\n  var eventDestroy = 'destroy';\n\n  /**\n   * Event emitter constructor.\n   *\n   * @class\n   */\n  function Emitter() {\n    this._events = {};\n    this._queue = [];\n    this._counter = 0;\n    this._isDestroyed = false;\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Bind an event listener.\n   *\n   * @public\n   * @memberof Emitter.prototype\n   * @param {String} event\n   * @param {Function} listener\n   * @returns {Emitter}\n   */\n  Emitter.prototype.on = function(event, listener) {\n    if (this._isDestroyed) return this;\n\n    // Get listeners queue and create it if it does not exist.\n    var listeners = this._events[event];\n    if (!listeners) listeners = this._events[event] = [];\n\n    // Add the listener to the queue.\n    listeners.push(listener);\n\n    return this;\n  };\n\n  /**\n   * Bind an event listener that is triggered only once.\n   *\n   * @public\n   * @memberof Emitter.prototype\n   * @param {String} event\n   * @param {Function} listener\n   * @returns {Emitter}\n   */\n  Emitter.prototype.once = function(event, listener) {\n    if (this._isDestroyed) return this;\n\n    var callback = function() {\n      this.off(event, callback);\n      listener.apply(null, arguments);\n    }.bind(this);\n\n    return this.on(event, callback);\n  };\n\n  /**\n   * Unbind all event listeners that match the provided listener function.\n   *\n   * @public\n   * @memberof Emitter.prototype\n   * @param {String} event\n   * @param {Function} [listener]\n   * @returns {Emitter}\n   */\n  Emitter.prototype.off = function(event, listener) {\n    if (this._isDestroyed) return this;\n\n    // Get listeners and return immediately if none is found.\n    var listeners = this._events[event];\n    if (!listeners || !listeners.length) return this;\n\n    // If no specific listener is provided remove all listeners.\n    if (!listener) {\n      listeners.length = 0;\n      return this;\n    }\n\n    // Remove all matching listeners.\n    var i = listeners.length;\n    while (i--) {\n      if (listener === listeners[i]) listeners.splice(i, 1);\n    }\n\n    return this;\n  };\n\n  /**\n   * Emit all listeners in a specified event with the provided arguments.\n   *\n   * @public\n   * @memberof Emitter.prototype\n   * @param {String} event\n   * @param {*} [arg1]\n   * @param {*} [arg2]\n   * @param {*} [arg3]\n   * @returns {Emitter}\n   */\n  Emitter.prototype.emit = function(event, arg1, arg2, arg3) {\n    if (this._isDestroyed) return this;\n\n    // Get event listeners and quit early if there's no listeners.\n    var listeners = this._events[event];\n    if (!listeners || !listeners.length) return this;\n\n    var queue = this._queue;\n    var qLength = queue.length;\n    var aLength = arguments.length - 1;\n    var i;\n\n    // Add the current listeners to the callback queue before we process them.\n    // This is necessary to guarantee that all of the listeners are called in\n    // correct order even if new event listeners are removed/added during\n    // processing and/or events are emitted during processing.\n    for (i = 0; i < listeners.length; i++) {\n      queue.push(listeners[i]);\n    }\n\n    // Increment queue counter. This is needed for the scenarios where emit is\n    // triggered while the queue is already processing. We need to keep track of\n    // how many \"queue processors\" there are active so that we can safely reset\n    // the queue in the end when the last queue processor is finished.\n    ++this._counter;\n\n    // Process the queue (the specific part of it for this emit).\n    for (i = qLength, qLength = queue.length; i < qLength; i++) {\n      // prettier-ignore\n      aLength === 0 ? queue[i]() :\n      aLength === 1 ? queue[i](arg1) :\n      aLength === 2 ? queue[i](arg1, arg2) :\n                      queue[i](arg1, arg2, arg3);\n\n      // Stop processing if the emitter is destroyed.\n      if (this._isDestroyed) return this;\n    }\n\n    // Decrement queue process counter.\n    --this._counter;\n\n    // Reset the queue if there are no more queue processes running.\n    if (!this._counter) queue.length = 0;\n\n    return this;\n  };\n\n  /**\n   * Destroy emitter instance. Basically just removes all bound listeners.\n   *\n   * @public\n   * @memberof Emitter.prototype\n   * @returns {Emitter}\n   */\n  Emitter.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n\n    var events = this._events;\n    var event;\n\n    // Flag as destroyed.\n    this._isDestroyed = true;\n\n    // Reset queue (if queue is currently processing this will also stop that).\n    this._queue.length = this._counter = 0;\n\n    // Remove all listeners.\n    for (event in events) {\n      if (events[event]) {\n        events[event].length = 0;\n        events[event] = undefined;\n      }\n    }\n\n    return this;\n  };\n\n  // Set up the default export values.\n  var isTransformSupported = false;\n  var transformStyle = 'transform';\n  var transformProp = 'transform';\n\n  // Find the supported transform prop and style names.\n  var style = 'transform';\n  var styleCap = 'Transform';\n  ['', 'Webkit', 'Moz', 'O', 'ms'].forEach(function(prefix) {\n    if (isTransformSupported) return;\n    var propName = prefix ? prefix + styleCap : style;\n    if (document.documentElement.style[propName] !== undefined) {\n      prefix = prefix.toLowerCase();\n      transformStyle = prefix ? '-' + prefix + '-' + style : style;\n      transformProp = propName;\n      isTransformSupported = true;\n    }\n  });\n\n  var stylesCache = typeof WeakMap === 'function' ? new WeakMap() : null;\n\n  /**\n   * Returns the computed value of an element's style property as a string.\n   *\n   * @param {HTMLElement} element\n   * @param {String} style\n   * @returns {String}\n   */\n  function getStyle(element, style) {\n    var styles = stylesCache && stylesCache.get(element);\n    if (!styles) {\n      styles = window.getComputedStyle(element, null);\n      stylesCache && stylesCache.set(element, styles);\n    }\n    return styles.getPropertyValue(style === 'transform' ? transformStyle : style);\n  }\n\n  var styleNameRegEx = /([A-Z])/g;\n\n  /**\n   * Transforms a camel case style property to kebab case style property.\n   *\n   * @param {String} string\n   * @returns {String}\n   */\n  function getStyleName(string) {\n    return string.replace(styleNameRegEx, '-$1').toLowerCase();\n  }\n\n  /**\n   * Set inline styles to an element.\n   *\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   */\n  function setStyles(element, styles) {\n    for (var prop in styles) {\n      element.style[prop === 'transform' ? transformProp : prop] = styles[prop];\n    }\n  }\n\n  /**\n   * Item animation handler powered by Web Animations API.\n   *\n   * @class\n   * @param {HTMLElement} element\n   */\n  function ItemAnimate(element) {\n    this._element = element;\n    this._animation = null;\n    this._callback = null;\n    this._props = [];\n    this._values = [];\n    this._keyframes = [];\n    this._options = {};\n    this._isDestroyed = false;\n    this._onFinish = this._onFinish.bind(this);\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Start instance's animation. Automatically stops current animation if it is\n   * running.\n   *\n   * @public\n   * @memberof ItemAnimate.prototype\n   * @param {Object} propsFrom\n   * @param {Object} propsTo\n   * @param {Object} [options]\n   * @param {Number} [options.duration=300]\n   * @param {String} [options.easing='ease']\n   * @param {Function} [options.onFinish]\n   */\n  ItemAnimate.prototype.start = function(propsFrom, propsTo, options) {\n    if (this._isDestroyed) return;\n\n    var animation = this._animation;\n    var currentProps = this._props;\n    var currentValues = this._values;\n    var opts = options || 0;\n    var cancelAnimation = false;\n\n    // If we have an existing animation running, let's check if it needs to be\n    // cancelled or if it can continue running.\n    if (animation) {\n      var propCount = 0;\n      var propIndex;\n\n      // Check if the requested animation target props and values match with the\n      // current props and values.\n      for (var propName in propsTo) {\n        ++propCount;\n        propIndex = currentProps.indexOf(propName);\n        if (propIndex === -1 || propsTo[propName] !== currentValues[propIndex]) {\n          cancelAnimation = true;\n          break;\n        }\n      }\n\n      // Check if the target props count matches current props count. This is\n      // needed for the edge case scenario where target props contain the same\n      // styles as current props, but the current props have some additional\n      // props.\n      if (!cancelAnimation && propCount !== currentProps.length) {\n        cancelAnimation = true;\n      }\n    }\n\n    // Cancel animation (if required).\n    if (cancelAnimation) animation.cancel();\n\n    // Store animation callback.\n    this._callback = typeof opts.onFinish === 'function' ? opts.onFinish : null;\n\n    // If we have a running animation that does not need to be cancelled, let's\n    // call it a day here and let it run.\n    if (animation && !cancelAnimation) return;\n\n    // Store target props and values to instance.\n    currentProps.length = currentValues.length = 0;\n    for (propName in propsTo) {\n      currentProps.push(propName);\n      currentValues.push(propsTo[propName]);\n    }\n\n    // Set up keyframes.\n    var animKeyframes = this._keyframes;\n    animKeyframes[0] = propsFrom;\n    animKeyframes[1] = propsTo;\n\n    // Set up options.\n    var animOptions = this._options;\n    animOptions.duration = opts.duration || 300;\n    animOptions.easing = opts.easing || 'ease';\n\n    // Start the animation\n    var element = this._element;\n    animation = element.animate(animKeyframes, animOptions);\n    animation.onfinish = this._onFinish;\n    this._animation = animation;\n\n    // Set the end styles. This makes sure that the element stays at the end\n    // values after animation is finished.\n    setStyles(element, propsTo);\n  };\n\n  /**\n   * Stop instance's current animation if running.\n   *\n   * @public\n   * @memberof ItemAnimate.prototype\n   * @param {Object} [styles]\n   */\n  ItemAnimate.prototype.stop = function(styles) {\n    if (this._isDestroyed || !this._animation) return;\n\n    var element = this._element;\n    var currentProps = this._props;\n    var currentValues = this._values;\n    var propName;\n    var propValue;\n    var i;\n\n    // Calculate (if not provided) and set styles.\n    if (!styles) {\n      for (i = 0; i < currentProps.length; i++) {\n        propName = currentProps[i];\n        propValue = getStyle(element, getStyleName(propName));\n        element.style[propName === 'transform' ? transformProp : propName] = propValue;\n      }\n    } else {\n      setStyles(element, styles);\n    }\n\n    //  Cancel animation.\n    this._animation.cancel();\n    this._animation = this._callback = null;\n\n    // Reset current props and values.\n    currentProps.length = currentValues.length = 0;\n  };\n\n  /**\n   * Check if the item is being animated currently.\n   *\n   * @public\n   * @memberof ItemAnimate.prototype\n   * @return {Boolean}\n   */\n  ItemAnimate.prototype.isAnimating = function() {\n    return !!this._animation;\n  };\n\n  /**\n   * Destroy the instance and stop current animation if it is running.\n   *\n   * @public\n   * @memberof ItemAnimate.prototype\n   */\n  ItemAnimate.prototype.destroy = function() {\n    if (this._isDestroyed) return;\n    this.stop();\n    this._element = this._options = this._keyframes = null;\n    this._isDestroyed = true;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Animation end handler.\n   *\n   * @private\n   * @memberof ItemAnimate.prototype\n   */\n  ItemAnimate.prototype._onFinish = function() {\n    var callback = this._callback;\n    this._animation = this._callback = null;\n    this._props.length = this._values.length = 0;\n    callback && callback();\n  };\n\n  var raf = (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    rafFallback\n  ).bind(window);\n\n  function rafFallback(cb) {\n    return window.setTimeout(cb, 16);\n  }\n\n  /**\n   * A ticker system for handling DOM reads and writes in an efficient way.\n   * Contains a read queue and a write queue that are processed on the next\n   * animation frame when needed.\n   *\n   * @class\n   */\n  function Ticker() {\n    this._nextTick = null;\n\n    this._queue = [];\n    this._reads = {};\n    this._writes = {};\n\n    this._batch = [];\n    this._batchReads = {};\n    this._batchWrites = {};\n\n    this._flush = this._flush.bind(this);\n  }\n\n  Ticker.prototype.add = function(id, readCallback, writeCallback, isImportant) {\n    // First, let's check if an item has been added to the queues with the same id\n    // and if so -> remove it.\n    var currentIndex = this._queue.indexOf(id);\n    if (currentIndex > -1) this._queue[currentIndex] = undefined;\n\n    // Add all important callbacks to the beginning of the queue and other\n    // callbacks to the end of the queue.\n    isImportant ? this._queue.unshift(id) : this._queue.push(id);\n\n    // Store callbacks.\n    this._reads[id] = readCallback;\n    this._writes[id] = writeCallback;\n\n    // Finally, let's kick-start the next tick if it is not running yet.\n    if (!this._nextTick) this._nextTick = raf(this._flush);\n  };\n\n  Ticker.prototype.cancel = function(id) {\n    var currentIndex = this._queue.indexOf(id);\n    if (currentIndex > -1) {\n      this._queue[currentIndex] = undefined;\n      this._reads[id] = undefined;\n      this._writes[id] = undefined;\n    }\n  };\n\n  Ticker.prototype._flush = function() {\n    var queue = this._queue;\n    var reads = this._reads;\n    var writes = this._writes;\n    var batch = this._batch;\n    var batchReads = this._batchReads;\n    var batchWrites = this._batchWrites;\n    var length = queue.length;\n    var id;\n    var i;\n\n    // Reset ticker.\n    this._nextTick = null;\n\n    // Setup queues and callback placeholders.\n    for (i = 0; i < length; i++) {\n      id = queue[i];\n      if (!id) continue;\n\n      batch.push(id);\n\n      batchReads[id] = reads[id];\n      reads[id] = undefined;\n\n      batchWrites[id] = writes[id];\n      writes[id] = undefined;\n    }\n\n    // Reset queue.\n    queue.length = 0;\n\n    // Process read callbacks.\n    for (i = 0; i < length; i++) {\n      id = batch[i];\n      if (batchReads[id]) {\n        batchReads[id]();\n        batchReads[id] = undefined;\n      }\n    }\n\n    // Process write callbacks.\n    for (i = 0; i < length; i++) {\n      id = batch[i];\n      if (batchWrites[id]) {\n        batchWrites[id]();\n        batchWrites[id] = undefined;\n      }\n    }\n\n    // Reset batch.\n    batch.length = 0;\n\n    // Restart the ticker if needed.\n    if (!this._nextTick && queue.length) {\n      this._nextTick = raf(this._flush);\n    }\n  };\n\n  var ticker = new Ticker();\n\n  var layoutTick = 'layout';\n  var visibilityTick = 'visibility';\n  var moveTick = 'move';\n  var scrollTick = 'scroll';\n\n  function addLayoutTick(itemId, readCallback, writeCallback) {\n    return ticker.add(itemId + layoutTick, readCallback, writeCallback);\n  }\n\n  function cancelLayoutTick(itemId) {\n    return ticker.cancel(itemId + layoutTick);\n  }\n\n  function addVisibilityTick(itemId, readCallback, writeCallback) {\n    return ticker.add(itemId + visibilityTick, readCallback, writeCallback);\n  }\n\n  function cancelVisibilityTick(itemId) {\n    return ticker.cancel(itemId + visibilityTick);\n  }\n\n  function addMoveTick(itemId, readCallback, writeCallback) {\n    return ticker.add(itemId + moveTick, readCallback, writeCallback, true);\n  }\n\n  function cancelMoveTick(itemId) {\n    return ticker.cancel(itemId + moveTick);\n  }\n\n  function addScrollTick(itemId, readCallback, writeCallback) {\n    return ticker.add(itemId + scrollTick, readCallback, writeCallback, true);\n  }\n\n  function cancelScrollTick(itemId) {\n    return ticker.cancel(itemId + scrollTick);\n  }\n\n  var proto = Element.prototype;\n  var matches =\n    proto.matches ||\n    proto.matchesSelector ||\n    proto.webkitMatchesSelector ||\n    proto.mozMatchesSelector ||\n    proto.msMatchesSelector ||\n    proto.oMatchesSelector;\n\n  /**\n   * Check if element matches a CSS selector.\n   *\n   * @param {*} val\n   * @returns {Boolean}\n   */\n  function elementMatches(el, selector) {\n    return matches.call(el, selector);\n  }\n\n  /**\n   * Add class to an element.\n   *\n   * @param {HTMLElement} element\n   * @param {String} className\n   */\n  function addClassModern(element, className) {\n    element.classList.add(className);\n  }\n\n  /**\n   * Add class to an element (legacy version, for IE9 support).\n   *\n   * @param {HTMLElement} element\n   * @param {String} className\n   */\n  function addClassLegacy(element, className) {\n    if (!elementMatches(element, '.' + className)) {\n      element.className += ' ' + className;\n    }\n  }\n\n  var addClass = ('classList' in Element.prototype ? addClassModern : addClassLegacy);\n\n  /**\n   * Normalize array index. Basically this function makes sure that the provided\n   * array index is within the bounds of the provided array and also transforms\n   * negative index to the matching positive index.\n   *\n   * @param {Array} array\n   * @param {Number} index\n   * @param {Boolean} isMigration\n   */\n  function normalizeArrayIndex(array, index, isMigration) {\n    var length = array.length;\n    var maxIndex = Math.max(0, isMigration ? length : length - 1);\n    return index > maxIndex ? maxIndex : index < 0 ? Math.max(maxIndex + index + 1, 0) : index;\n  }\n\n  /**\n   * Move array item to another index.\n   *\n   * @param {Array} array\n   * @param {Number} fromIndex\n   *   - Index (positive or negative) of the item that will be moved.\n   * @param {Number} toIndex\n   *   - Index (positive or negative) where the item should be moved to.\n   */\n  function arrayMove(array, fromIndex, toIndex) {\n    // Make sure the array has two or more items.\n    if (array.length < 2) return;\n\n    // Normalize the indices.\n    var from = normalizeArrayIndex(array, fromIndex);\n    var to = normalizeArrayIndex(array, toIndex);\n\n    // Add target item to the new position.\n    if (from !== to) {\n      array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n  }\n\n  /**\n   * Swap array items.\n   *\n   * @param {Array} array\n   * @param {Number} index\n   *   - Index (positive or negative) of the item that will be swapped.\n   * @param {Number} withIndex\n   *   - Index (positive or negative) of the other item that will be swapped.\n   */\n  function arraySwap(array, index, withIndex) {\n    // Make sure the array has two or more items.\n    if (array.length < 2) return;\n\n    // Normalize the indices.\n    var indexA = normalizeArrayIndex(array, index);\n    var indexB = normalizeArrayIndex(array, withIndex);\n    var temp;\n\n    // Swap the items.\n    if (indexA !== indexB) {\n      temp = array[indexA];\n      array[indexA] = array[indexB];\n      array[indexB] = temp;\n    }\n  }\n\n  var actionCancel = 'cancel';\n  var actionFinish = 'finish';\n\n  /**\n   * Returns a function, that, as long as it continues to be invoked, will not\n   * be triggered. The function will be called after it stops being called for\n   * N milliseconds. The returned function accepts one argument which, when\n   * being \"finish\", calls the debounce function immediately if it is currently\n   * waiting to be called, and when being \"cancel\" cancels the currently queued\n   * function call.\n   *\n   * @param {Function} fn\n   * @param {Number} wait\n   * @returns {Function}\n   */\n  function debounce(fn, wait) {\n    var timeout;\n\n    if (wait > 0) {\n      return function(action) {\n        if (timeout !== undefined) {\n          timeout = window.clearTimeout(timeout);\n          if (action === actionFinish) fn();\n        }\n\n        if (action !== actionCancel && action !== actionFinish) {\n          timeout = window.setTimeout(function() {\n            timeout = undefined;\n            fn();\n          }, wait);\n        }\n      };\n    }\n\n    return function(action) {\n      if (action !== actionCancel) fn();\n    };\n  }\n\n  /**\n   * Returns true if element is transformed, false if not. In practice the\n   * element's display value must be anything else than \"none\" or \"inline\" as\n   * well as have a valid transform value applied in order to be counted as a\n   * transformed element.\n   *\n   * Borrowed from Mezr (v0.6.1):\n   * https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L661\n   *\n   * @param {HTMLElement} element\n   * @returns {Boolean}\n   */\n  function isTransformed(element) {\n    var transform = getStyle(element, 'transform');\n    if (!transform || transform === 'none') return false;\n\n    var display = getStyle(element, 'display');\n    if (display === 'inline' || display === 'none') return false;\n\n    return true;\n  }\n\n  /**\n   * Returns an absolute positioned element's containing block, which is\n   * considered to be the closest ancestor element that the target element's\n   * positioning is relative to. Disclaimer: this only works as intended for\n   * absolute positioned elements.\n   *\n   * @param {HTMLElement} element\n   * @param {Boolean} [includeSelf=false]\n   *   - When this is set to true the containing block checking is started from\n   *     the provided element. Otherwise the checking is started from the\n   *     provided element's parent element.\n   * @returns {(Document|Element)}\n   */\n  function getContainingBlock(element, includeSelf) {\n    // As long as the containing block is an element, static and not\n    // transformed, try to get the element's parent element and fallback to\n    // document. https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L339\n    var ret = (includeSelf ? element : element.parentElement) || document;\n    while (ret && ret !== document && getStyle(ret, 'position') === 'static' && !isTransformed(ret)) {\n      ret = ret.parentElement || document;\n    }\n    return ret;\n  }\n\n  /**\n   * Returns the computed value of an element's style property transformed into\n   * a float value.\n   *\n   * @param {HTMLElement} el\n   * @param {String} style\n   * @returns {Number}\n   */\n  function getStyleAsFloat(el, style) {\n    return parseFloat(getStyle(el, style)) || 0;\n  }\n\n  var offsetA = {};\n  var offsetB = {};\n  var offsetDiff = {};\n\n  /**\n   * Returns the element's document offset, which in practice means the vertical\n   * and horizontal distance between the element's northwest corner and the\n   * document's northwest corner. Note that this function always returns the same\n   * object so be sure to read the data from it instead using it as a reference.\n   *\n   * @param {(Document|Element|Window)} element\n   * @param {Object} [offsetData]\n   *   - Optional data object where the offset data will be inserted to. If not\n   *     provided a new object will be created for the return data.\n   * @returns {Object}\n   */\n  function getOffset(element, offsetData) {\n    var ret = offsetData || {};\n    var rect;\n\n    // Set up return data.\n    ret.left = 0;\n    ret.top = 0;\n\n    // Document's offsets are always 0.\n    if (element === document) return ret;\n\n    // Add viewport scroll left/top to the respective offsets.\n    ret.left = window.pageXOffset || 0;\n    ret.top = window.pageYOffset || 0;\n\n    // Window's offsets are the viewport scroll left/top values.\n    if (element.self === window.self) return ret;\n\n    // Add element's client rects to the offsets.\n    rect = element.getBoundingClientRect();\n    ret.left += rect.left;\n    ret.top += rect.top;\n\n    // Exclude element's borders from the offset.\n    ret.left += getStyleAsFloat(element, 'border-left-width');\n    ret.top += getStyleAsFloat(element, 'border-top-width');\n\n    return ret;\n  }\n\n  /**\n   * Calculate the offset difference two elements.\n   *\n   * @param {HTMLElement} elemA\n   * @param {HTMLElement} elemB\n   * @param {Boolean} [compareContainingBlocks=false]\n   *   - When this is set to true the containing blocks of the provided elements\n   *     will be used for calculating the difference. Otherwise the provided\n   *     elements will be compared directly.\n   * @returns {Object}\n   */\n  function getOffsetDiff(elemA, elemB, compareContainingBlocks) {\n    offsetDiff.left = 0;\n    offsetDiff.top = 0;\n\n    // If elements are same let's return early.\n    if (elemA === elemB) return offsetDiff;\n\n    // Compare containing blocks if necessary.\n    if (compareContainingBlocks) {\n      elemA = getContainingBlock(elemA, true);\n      elemB = getContainingBlock(elemB, true);\n\n      // If containing blocks are identical, let's return early.\n      if (elemA === elemB) return offsetDiff;\n    }\n\n    // Finally, let's calculate the offset diff.\n    getOffset(elemA, offsetA);\n    getOffset(elemB, offsetB);\n    offsetDiff.left = offsetB.left - offsetA.left;\n    offsetDiff.top = offsetB.top - offsetA.top;\n\n    return offsetDiff;\n  }\n\n  var translateData = {};\n\n  /**\n   * Returns the element's computed translateX and translateY values as a floats.\n   * The returned object is always the same object and updated every time this\n   * function is called.\n   *\n   * @param {HTMLElement} element\n   * @returns {Object}\n   */\n  function getTranslate(element) {\n    translateData.x = 0;\n    translateData.y = 0;\n\n    var transform = getStyle(element, 'transform');\n    if (!transform) return translateData;\n\n    var matrixData = transform.replace('matrix(', '').split(',');\n    translateData.x = parseFloat(matrixData[4]) || 0;\n    translateData.y = parseFloat(matrixData[5]) || 0;\n\n    return translateData;\n  }\n\n  /**\n   * Transform translateX and translateY value into CSS transform style\n   * property's value.\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @returns {String}\n   */\n  function getTranslateString(x, y) {\n    return 'translateX(' + x + 'px) translateY(' + y + 'px)';\n  }\n\n  var tempArray = [];\n\n  /**\n   * Insert an item or an array of items to array to a specified index. Mutates\n   * the array. The index can be negative in which case the items will be added\n   * to the end of the array.\n   *\n   * @param {Array} array\n   * @param {*} items\n   * @param {Number} [index=-1]\n   */\n  function arrayInsert(array, items, index) {\n    var startIndex = typeof index === 'number' ? index : -1;\n    if (startIndex < 0) startIndex = array.length - startIndex + 1;\n\n    array.splice.apply(array, tempArray.concat(startIndex, 0, items));\n    tempArray.length = 0;\n  }\n\n  var objectType = '[object Object]';\n  var toString = Object.prototype.toString;\n\n  /**\n   * Check if a value is a plain object.\n   *\n   * @param {*} val\n   * @returns {Boolean}\n   */\n  function isPlainObject(val) {\n    return typeof val === 'object' && toString.call(val) === objectType;\n  }\n\n  /**\n   * Remove class from an element.\n   *\n   * @param {HTMLElement} element\n   * @param {String} className\n   */\n  function removeClassModern(element, className) {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Remove class from an element (legacy version, for IE9 support).\n   *\n   * @param {HTMLElement} element\n   * @param {String} className\n   */\n  function removeClassLegacy(element, className) {\n    if (elementMatches(element, '.' + className)) {\n      element.className = (' ' + element.className + ' ').replace(' ' + className + ' ', ' ').trim();\n    }\n  }\n\n  var removeClass = ('classList' in Element.prototype ? removeClassModern : removeClassLegacy);\n\n  // To provide consistently correct dragging experience we need to know if\n  // transformed elements leak fixed elements or not.\n  var hasTransformLeak = checkTransformLeak();\n\n  // Drag start predicate states.\n  var startPredicateInactive = 0;\n  var startPredicatePending = 1;\n  var startPredicateResolved = 2;\n  var startPredicateRejected = 3;\n\n  /**\n   * Bind Hammer touch interaction to an item.\n   *\n   * @class\n   * @param {Item} item\n   */\n  function ItemDrag(item) {\n    if (!Hammer) {\n      throw new Error('[' + namespace + '] required dependency Hammer is not defined.');\n    }\n\n    // If we don't have a valid transform leak test result yet, let's run the\n    // test on first ItemDrag init. The test needs body element to be ready and\n    // here we can be sure that it is ready.\n    if (hasTransformLeak === null) {\n      hasTransformLeak = checkTransformLeak();\n    }\n\n    var drag = this;\n    var element = item._element;\n    var grid = item.getGrid();\n    var settings = grid._settings;\n    var hammer;\n\n    // Start predicate private data.\n    var startPredicate =\n      typeof settings.dragStartPredicate === 'function'\n        ? settings.dragStartPredicate\n        : ItemDrag.defaultStartPredicate;\n    var startPredicateState = startPredicateInactive;\n    var startPredicateResult;\n\n    // Protected data.\n    this._item = item;\n    this._gridId = grid._id;\n    this._hammer = hammer = new Hammer.Manager(element);\n    this._isDestroyed = false;\n    this._isMigrating = false;\n\n    // Setup item's initial drag data.\n    this._reset();\n\n    // Bind some methods that needs binding.\n    this._onScroll = this._onScroll.bind(this);\n    this._prepareMove = this._prepareMove.bind(this);\n    this._applyMove = this._applyMove.bind(this);\n    this._prepareScroll = this._prepareScroll.bind(this);\n    this._applyScroll = this._applyScroll.bind(this);\n    this._checkOverlap = this._checkOverlap.bind(this);\n\n    // Create a private drag start resolver that can be used to resolve the drag\n    // start predicate asynchronously.\n    this._forceResolveStartPredicate = function(event) {\n      if (!this._isDestroyed && startPredicateState === startPredicatePending) {\n        startPredicateState = startPredicateResolved;\n        this._onStart(event);\n      }\n    };\n\n    // Create debounce overlap checker function.\n    this._checkOverlapDebounce = debounce(this._checkOverlap, settings.dragSortInterval);\n\n    // Add drag recognizer to hammer.\n    hammer.add(\n      new Hammer.Pan({\n        event: 'drag',\n        pointers: 1,\n        threshold: 0,\n        direction: Hammer.DIRECTION_ALL\n      })\n    );\n\n    // Add drag init recognizer to hammer.\n    hammer.add(\n      new Hammer.Press({\n        event: 'draginit',\n        pointers: 1,\n        threshold: 1000,\n        time: 0\n      })\n    );\n\n    // Configure the hammer instance.\n    if (isPlainObject(settings.dragHammerSettings)) {\n      hammer.set(settings.dragHammerSettings);\n    }\n\n    // Bind drag events.\n    hammer\n      .on('draginit dragstart dragmove', function(e) {\n        // Let's activate drag start predicate state.\n        if (startPredicateState === startPredicateInactive) {\n          startPredicateState = startPredicatePending;\n        }\n\n        // If predicate is pending try to resolve it.\n        if (startPredicateState === startPredicatePending) {\n          startPredicateResult = startPredicate(drag._item, e);\n          if (startPredicateResult === true) {\n            startPredicateState = startPredicateResolved;\n            drag._onStart(e);\n          } else if (startPredicateResult === false) {\n            startPredicateState = startPredicateRejected;\n          }\n        }\n\n        // Otherwise if predicate is resolved and drag is active, move the item.\n        else if (startPredicateState === startPredicateResolved && drag._isActive) {\n          drag._onMove(e);\n        }\n      })\n      .on('dragend dragcancel draginitup', function(e) {\n        // Check if the start predicate was resolved during drag.\n        var isResolved = startPredicateState === startPredicateResolved;\n\n        // Do final predicate check to allow user to unbind stuff for the current\n        // drag procedure within the predicate callback. The return value of this\n        // check will have no effect to the state of the predicate.\n        startPredicate(drag._item, e);\n\n        // Reset start predicate state.\n        startPredicateState = startPredicateInactive;\n\n        // If predicate is resolved and dragging is active, call the end handler.\n        if (isResolved && drag._isActive) drag._onEnd(e);\n      });\n\n    // Prevent native link/image dragging for the item and it's ancestors.\n    element.addEventListener('dragstart', preventDefault, false);\n  }\n\n  /**\n   * Public static methods\n   * *********************\n   */\n\n  /**\n   * Default drag start predicate handler that handles anchor elements\n   * gracefully. The return value of this function defines if the drag is\n   * started, rejected or pending. When true is returned the dragging is started\n   * and when false is returned the dragging is rejected. If nothing is returned\n   * the predicate will be called again on the next drag movement.\n   *\n   * @public\n   * @memberof ItemDrag\n   * @param {Item} item\n   * @param {Object} event\n   * @param {Object} [options]\n   *   - An optional options object which can be used to pass the predicate\n   *     it's options manually. By default the predicate retrieves the options\n   *     from the grid's settings.\n   * @returns {Boolean}\n   */\n  ItemDrag.defaultStartPredicate = function(item, event, options) {\n    var drag = item._drag;\n    var predicate = drag._startPredicateData || drag._setupStartPredicate(options);\n\n    // Final event logic. At this stage return value does not matter anymore,\n    // the predicate is either resolved or it's not and there's nothing to do\n    // about it. Here we just reset data and if the item element is a link\n    // we follow it (if there has only been slight movement).\n    if (event.isFinal) {\n      drag._finishStartPredicate(event);\n      return;\n    }\n\n    // Find and store the handle element so we can check later on if the\n    // cursor is within the handle. If we have a handle selector let's find\n    // the corresponding element. Otherwise let's use the item element as the\n    // handle.\n    if (!predicate.handleElement) {\n      predicate.handleElement = drag._getStartPredicateHandle(event);\n      if (!predicate.handleElement) return false;\n    }\n\n    // If delay is defined let's keep track of the latest event and initiate\n    // delay if it has not been done yet.\n    if (predicate.delay) {\n      predicate.event = event;\n      if (!predicate.delayTimer) {\n        predicate.delayTimer = window.setTimeout(function() {\n          predicate.delay = 0;\n          if (drag._resolveStartPredicate(predicate.event)) {\n            drag._forceResolveStartPredicate(predicate.event);\n            drag._resetStartPredicate();\n          }\n        }, predicate.delay);\n      }\n    }\n\n    return drag._resolveStartPredicate(event);\n  };\n\n  /**\n   * Default drag sort predicate.\n   *\n   * @public\n   * @memberof ItemDrag\n   * @param {Item} item\n   * @param {Object} [options]\n   * @param {Number} [options.threshold=50]\n   * @param {String} [options.action='move']\n   * @returns {(Boolean|DragSortCommand)}\n   *   - Returns false if no valid index was found. Otherwise returns drag sort\n   *     command.\n   */\n  ItemDrag.defaultSortPredicate = (function() {\n    var itemRect = {};\n    var targetRect = {};\n    var returnData = {};\n    var rootGridArray = [];\n\n    function getTargetGrid(item, rootGrid, threshold) {\n      var target = null;\n      var dragSort = rootGrid._settings.dragSort;\n      var bestScore = -1;\n      var gridScore;\n      var grids;\n      var grid;\n      var i;\n\n      // Get potential target grids.\n      if (dragSort === true) {\n        rootGridArray[0] = rootGrid;\n        grids = rootGridArray;\n      } else {\n        grids = dragSort.call(rootGrid, item);\n      }\n\n      // Return immediately if there are no grids.\n      if (!Array.isArray(grids)) return target;\n\n      // Loop through the grids and get the best match.\n      for (i = 0; i < grids.length; i++) {\n        grid = grids[i];\n\n        // Filter out all destroyed grids.\n        if (grid._isDestroyed) continue;\n\n        // We need to update the grid's offsets and dimensions since they might\n        // have changed (e.g during scrolling).\n        grid._updateBoundingRect();\n\n        // Check how much dragged element overlaps the container element.\n        targetRect.width = grid._width;\n        targetRect.height = grid._height;\n        targetRect.left = grid._left;\n        targetRect.top = grid._top;\n        gridScore = getRectOverlapScore(itemRect, targetRect);\n\n        // Check if this grid is the best match so far.\n        if (gridScore > threshold && gridScore > bestScore) {\n          bestScore = gridScore;\n          target = grid;\n        }\n      }\n\n      // Always reset root grid array.\n      rootGridArray.length = 0;\n\n      return target;\n    }\n\n    return function(item, options) {\n      var drag = item._drag;\n      var rootGrid = drag._getGrid();\n\n      // Get drag sort predicate settings.\n      var sortThreshold = options && typeof options.threshold === 'number' ? options.threshold : 50;\n      var sortAction = options && options.action === 'swap' ? 'swap' : 'move';\n\n      // Populate item rect data.\n      itemRect.width = item._width;\n      itemRect.height = item._height;\n      itemRect.left = drag._elementClientX;\n      itemRect.top = drag._elementClientY;\n\n      // Calculate the target grid.\n      var grid = getTargetGrid(item, rootGrid, sortThreshold);\n\n      // Return early if we found no grid container element that overlaps the\n      // dragged item enough.\n      if (!grid) return false;\n\n      var gridOffsetLeft = 0;\n      var gridOffsetTop = 0;\n      var matchScore = -1;\n      var matchIndex;\n      var hasValidTargets;\n      var target;\n      var score;\n      var i;\n\n      // If item is moved within it's originating grid adjust item's left and\n      // top props. Otherwise if item is moved to/within another grid get the\n      // container element's offset (from the element's content edge).\n      if (grid === rootGrid) {\n        itemRect.left = drag._gridX + item._marginLeft;\n        itemRect.top = drag._gridY + item._marginTop;\n      } else {\n        grid._updateBorders(1, 0, 1, 0);\n        gridOffsetLeft = grid._left + grid._borderLeft;\n        gridOffsetTop = grid._top + grid._borderTop;\n      }\n\n      // Loop through the target grid items and try to find the best match.\n      for (i = 0; i < grid._items.length; i++) {\n        target = grid._items[i];\n\n        // If the target item is not active or the target item is the dragged\n        // item let's skip to the next item.\n        if (!target._isActive || target === item) {\n          continue;\n        }\n\n        // Mark the grid as having valid target items.\n        hasValidTargets = true;\n\n        // Calculate the target's overlap score with the dragged item.\n        targetRect.width = target._width;\n        targetRect.height = target._height;\n        targetRect.left = target._left + target._marginLeft + gridOffsetLeft;\n        targetRect.top = target._top + target._marginTop + gridOffsetTop;\n        score = getRectOverlapScore(itemRect, targetRect);\n\n        // Update best match index and score if the target's overlap score with\n        // the dragged item is higher than the current best match score.\n        if (score > matchScore) {\n          matchIndex = i;\n          matchScore = score;\n        }\n      }\n\n      // If there is no valid match and the item is being moved into another\n      // grid.\n      if (matchScore < sortThreshold && item.getGrid() !== grid) {\n        matchIndex = hasValidTargets ? -1 : 0;\n        matchScore = Infinity;\n      }\n\n      // Check if the best match overlaps enough to justify a placement switch.\n      if (matchScore >= sortThreshold) {\n        returnData.grid = grid;\n        returnData.index = matchIndex;\n        returnData.action = sortAction;\n        return returnData;\n      }\n\n      return false;\n    };\n  })();\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Abort dragging and reset drag data.\n   *\n   * @public\n   * @memberof ItemDrag.prototype\n   * @returns {ItemDrag}\n   */\n  ItemDrag.prototype.stop = function() {\n    var item = this._item;\n    var element = item._element;\n    var grid = this._getGrid();\n\n    if (!this._isActive) return this;\n\n    // If the item is being dropped into another grid, finish it up and return\n    // immediately.\n    if (this._isMigrating) {\n      this._finishMigration();\n      return this;\n    }\n\n    // Cancel queued move and scroll ticks.\n    cancelMoveTick(item._id);\n    cancelScrollTick(item._id);\n\n    // Remove scroll listeners.\n    this._unbindScrollListeners();\n\n    // Cancel overlap check.\n    this._checkOverlapDebounce('cancel');\n\n    // Append item element to the container if it's not it's child. Also make\n    // sure the translate values are adjusted to account for the DOM shift.\n    if (element.parentNode !== grid._element) {\n      grid._element.appendChild(element);\n      element.style[transformProp] = getTranslateString(this._gridX, this._gridY);\n    }\n\n    // Remove dragging class.\n    removeClass(element, grid._settings.itemDraggingClass);\n\n    // Reset drag data.\n    this._reset();\n\n    return this;\n  };\n\n  /**\n   * Destroy instance.\n   *\n   * @public\n   * @memberof ItemDrag.prototype\n   * @returns {ItemDrag}\n   */\n  ItemDrag.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n    this.stop();\n    this._hammer.destroy();\n    this._item._element.removeEventListener('dragstart', preventDefault, false);\n    this._isDestroyed = true;\n    return this;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Get Grid instance.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @returns {?Grid}\n   */\n  ItemDrag.prototype._getGrid = function() {\n    return gridInstances[this._gridId] || null;\n  };\n\n  /**\n   * Setup/reset drag data.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._reset = function() {\n    // Is item being dragged?\n    this._isActive = false;\n\n    // The dragged item's container element.\n    this._container = null;\n\n    // The dragged item's containing block.\n    this._containingBlock = null;\n\n    // Hammer event data.\n    this._lastEvent = null;\n    this._lastScrollEvent = null;\n\n    // All the elements which need to be listened for scroll events during\n    // dragging.\n    this._scrollers = [];\n\n    // The current translateX/translateY position.\n    this._left = 0;\n    this._top = 0;\n\n    // Dragged element's current position within the grid.\n    this._gridX = 0;\n    this._gridY = 0;\n\n    // Dragged element's current offset from window's northwest corner. Does\n    // not account for element's margins.\n    this._elementClientX = 0;\n    this._elementClientY = 0;\n\n    // Offset difference between the dragged element's temporary drag\n    // container and it's original container.\n    this._containerDiffX = 0;\n    this._containerDiffY = 0;\n  };\n\n  /**\n   * Bind drag scroll handlers to all scrollable ancestor elements of the\n   * dragged element and the drag container element.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._bindScrollListeners = function() {\n    var gridContainer = this._getGrid()._element;\n    var dragContainer = this._container;\n    var scrollers = this._scrollers;\n    var containerScrollers;\n    var i;\n\n    // Get dragged element's scrolling parents.\n    scrollers.length = 0;\n    getScrollParents(this._item._element, scrollers);\n\n    // If drag container is defined and it's not the same element as grid\n    // container then we need to add the grid container and it's scroll parents\n    // to the elements which are going to be listener for scroll events.\n    if (dragContainer !== gridContainer) {\n      containerScrollers = [];\n      getScrollParents(gridContainer, containerScrollers);\n      containerScrollers.push(gridContainer);\n      for (i = 0; i < containerScrollers.length; i++) {\n        if (scrollers.indexOf(containerScrollers[i]) < 0) {\n          scrollers.push(containerScrollers[i]);\n        }\n      }\n    }\n\n    // Bind scroll listeners.\n    for (i = 0; i < scrollers.length; i++) {\n      scrollers[i].addEventListener('scroll', this._onScroll);\n    }\n  };\n\n  /**\n   * Unbind currently bound drag scroll handlers from all scrollable ancestor\n   * elements of the dragged element and the drag container element.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._unbindScrollListeners = function() {\n    var scrollers = this._scrollers;\n    var i;\n\n    for (i = 0; i < scrollers.length; i++) {\n      scrollers[i].removeEventListener('scroll', this._onScroll);\n    }\n\n    scrollers.length = 0;\n  };\n\n  /**\n   * Setup default start predicate.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} [options]\n   * @returns {Object}\n   */\n  ItemDrag.prototype._setupStartPredicate = function(options) {\n    var config = options || this._getGrid()._settings.dragStartPredicate || 0;\n    return (this._startPredicateData = {\n      distance: Math.abs(config.distance) || 0,\n      delay: Math.max(config.delay, 0) || 0,\n      handle: typeof config.handle === 'string' ? config.handle : false\n    });\n  };\n\n  /**\n   * Setup default start predicate handle.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   * @returns {?HTMLElement}\n   */\n  ItemDrag.prototype._getStartPredicateHandle = function(event) {\n    var predicate = this._startPredicateData;\n    var element = this._item._element;\n    var handleElement = element;\n\n    // No handle, no hassle -> let's use the item element as the handle.\n    if (!predicate.handle) return handleElement;\n\n    // If there is a specific predicate handle defined, let's try to get it.\n    handleElement = (event.changedPointers[0] || 0).target;\n    while (handleElement && !elementMatches(handleElement, predicate.handle)) {\n      handleElement = handleElement !== element ? handleElement.parentElement : null;\n    }\n    return handleElement || null;\n  };\n\n  /**\n   * Unbind currently bound drag scroll handlers from all scrollable ancestor\n   * elements of the dragged element and the drag container element.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   * @returns {Boolean}\n   */\n  ItemDrag.prototype._resolveStartPredicate = function(event) {\n    var predicate = this._startPredicateData;\n    var pointer = event.changedPointers[0];\n    var pageX = (pointer && pointer.pageX) || 0;\n    var pageY = (pointer && pointer.pageY) || 0;\n    var handleRect;\n    var handleLeft;\n    var handleTop;\n    var handleWidth;\n    var handleHeight;\n\n    // If the moved distance is smaller than the threshold distance or there is\n    // some delay left, ignore this predicate cycle.\n    if (event.distance < predicate.distance || predicate.delay) return;\n\n    // Get handle rect data.\n    handleRect = predicate.handleElement.getBoundingClientRect();\n    handleLeft = handleRect.left + (window.pageXOffset || 0);\n    handleTop = handleRect.top + (window.pageYOffset || 0);\n    handleWidth = handleRect.width;\n    handleHeight = handleRect.height;\n\n    // Reset predicate data.\n    this._resetStartPredicate();\n\n    // If the cursor is still within the handle let's start the drag.\n    return (\n      handleWidth &&\n      handleHeight &&\n      pageX >= handleLeft &&\n      pageX < handleLeft + handleWidth &&\n      pageY >= handleTop &&\n      pageY < handleTop + handleHeight\n    );\n  };\n\n  /**\n   * Finalize start predicate.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   */\n  ItemDrag.prototype._finishStartPredicate = function(event) {\n    var element = this._item._element;\n\n    // Reset predicate.\n    this._resetStartPredicate();\n\n    // If the gesture can be interpreted as click let's try to open the element's\n    // href url (if it is an anchor element).\n    if (isClick(event)) openAnchorHref(element);\n  };\n\n  /**\n   * Reset for default drag start predicate function.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._resetStartPredicate = function() {\n    var predicate = this._startPredicateData;\n    if (predicate) {\n      if (predicate.delayTimer) {\n        predicate.delayTimer = window.clearTimeout(predicate.delayTimer);\n      }\n      this._startPredicateData = null;\n    }\n  };\n\n  /**\n   * Check (during drag) if an item is overlapping other items and based on\n   * the configuration layout the items.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._checkOverlap = function() {\n    if (!this._isActive) return;\n\n    var item = this._item;\n    var settings = this._getGrid()._settings;\n    var result;\n    var currentGrid;\n    var currentIndex;\n    var targetGrid;\n    var targetIndex;\n    var sortAction;\n    var isMigration;\n\n    // Get overlap check result.\n    if (typeof settings.dragSortPredicate === 'function') {\n      result = settings.dragSortPredicate(item, this._lastEvent);\n    } else {\n      result = ItemDrag.defaultSortPredicate(item, settings.dragSortPredicate);\n    }\n\n    // Let's make sure the result object has a valid index before going further.\n    if (!result || typeof result.index !== 'number') return;\n\n    currentGrid = item.getGrid();\n    targetGrid = result.grid || currentGrid;\n    isMigration = currentGrid !== targetGrid;\n    currentIndex = currentGrid._items.indexOf(item);\n    targetIndex = normalizeArrayIndex(targetGrid._items, result.index, isMigration);\n    sortAction = result.action === 'swap' ? 'swap' : 'move';\n\n    // If the item was moved within it's current grid.\n    if (!isMigration) {\n      // Make sure the target index is not the current index.\n      if (currentIndex !== targetIndex) {\n        // Do the sort.\n        (sortAction === 'swap' ? arraySwap : arrayMove)(\n          currentGrid._items,\n          currentIndex,\n          targetIndex\n        );\n\n        // Emit move event.\n        if (currentGrid._hasListeners(eventMove)) {\n          currentGrid._emit(eventMove, {\n            item: item,\n            fromIndex: currentIndex,\n            toIndex: targetIndex,\n            action: sortAction\n          });\n        }\n\n        // Layout the grid.\n        currentGrid.layout();\n      }\n    }\n\n    // If the item was moved to another grid.\n    else {\n      // Emit beforeSend event.\n      if (currentGrid._hasListeners(eventBeforeSend)) {\n        currentGrid._emit(eventBeforeSend, {\n          item: item,\n          fromGrid: currentGrid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      }\n\n      // Emit beforeReceive event.\n      if (targetGrid._hasListeners(eventBeforeReceive)) {\n        targetGrid._emit(eventBeforeReceive, {\n          item: item,\n          fromGrid: currentGrid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      }\n\n      // Update item's grid id reference.\n      item._gridId = targetGrid._id;\n\n      // Update drag instance's migrating indicator.\n      this._isMigrating = item._gridId !== this._gridId;\n\n      // Move item instance from current grid to target grid.\n      currentGrid._items.splice(currentIndex, 1);\n      arrayInsert(targetGrid._items, item, targetIndex);\n\n      // Set sort data as null, which is an indicator for the item comparison\n      // function that the sort data of this specific item should be fetched\n      // lazily.\n      item._sortData = null;\n\n      // Emit send event.\n      if (currentGrid._hasListeners(eventSend)) {\n        currentGrid._emit(eventSend, {\n          item: item,\n          fromGrid: currentGrid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      }\n\n      // Emit receive event.\n      if (targetGrid._hasListeners(eventReceive)) {\n        targetGrid._emit(eventReceive, {\n          item: item,\n          fromGrid: currentGrid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      }\n\n      // Layout both grids.\n      currentGrid.layout();\n      targetGrid.layout();\n    }\n  };\n\n  /**\n   * If item is dragged into another grid, finish the migration process\n   * gracefully.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._finishMigration = function() {\n    var item = this._item;\n    var release = item._release;\n    var element = item._element;\n    var isActive = item._isActive;\n    var targetGrid = item.getGrid();\n    var targetGridElement = targetGrid._element;\n    var targetSettings = targetGrid._settings;\n    var targetContainer = targetSettings.dragContainer || targetGridElement;\n    var currentSettings = this._getGrid()._settings;\n    var currentContainer = element.parentNode;\n    var translate;\n    var offsetDiff;\n\n    // Destroy current drag. Note that we need to set the migrating flag to\n    // false first, because otherwise we create an infinite loop between this\n    // and the drag.stop() method.\n    this._isMigrating = false;\n    this.destroy();\n\n    // Remove current classnames.\n    removeClass(element, currentSettings.itemClass);\n    removeClass(element, currentSettings.itemVisibleClass);\n    removeClass(element, currentSettings.itemHiddenClass);\n\n    // Add new classnames.\n    addClass(element, targetSettings.itemClass);\n    addClass(element, isActive ? targetSettings.itemVisibleClass : targetSettings.itemHiddenClass);\n\n    // Move the item inside the target container if it's different than the\n    // current container.\n    if (targetContainer !== currentContainer) {\n      targetContainer.appendChild(element);\n      offsetDiff = getOffsetDiff(currentContainer, targetContainer, true);\n      translate = getTranslate(element);\n      translate.x -= offsetDiff.left;\n      translate.y -= offsetDiff.top;\n    }\n\n    // Update item's cached dimensions and sort data.\n    item._refreshDimensions();\n    item._refreshSortData();\n\n    // Calculate the offset difference between target's drag container (if any)\n    // and actual grid container element. We save it later for the release\n    // process.\n    offsetDiff = getOffsetDiff(targetContainer, targetGridElement, true);\n    release._containerDiffX = offsetDiff.left;\n    release._containerDiffY = offsetDiff.top;\n\n    // Recreate item's drag handler.\n    item._drag = targetSettings.dragEnabled ? new ItemDrag(item) : null;\n\n    // Adjust the position of the item element if it was moved from a container\n    // to another.\n    if (targetContainer !== currentContainer) {\n      element.style[transformProp] = getTranslateString(translate.x, translate.y);\n    }\n\n    // Update child element's styles to reflect the current visibility state.\n    item._child.removeAttribute('style');\n    setStyles(item._child, isActive ? targetSettings.visibleStyles : targetSettings.hiddenStyles);\n\n    // Start the release.\n    release.start();\n  };\n\n  /**\n   * Drag start handler.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   */\n  ItemDrag.prototype._onStart = function(event) {\n    var item = this._item;\n\n    // If item is not active, don't start the drag.\n    if (!item._isActive) return;\n\n    var element = item._element;\n    var grid = this._getGrid();\n    var settings = grid._settings;\n    var release = item._release;\n    var migrate = item._migrate;\n    var gridContainer = grid._element;\n    var dragContainer = settings.dragContainer || gridContainer;\n    var containingBlock = getContainingBlock(dragContainer, true);\n    var translate = getTranslate(element);\n    var currentLeft = translate.x;\n    var currentTop = translate.y;\n    var elementRect = element.getBoundingClientRect();\n    var hasDragContainer = dragContainer !== gridContainer;\n    var offsetDiff;\n\n    // If grid container is not the drag container, we need to calculate the\n    // offset difference between grid container and drag container's containing\n    // element.\n    if (hasDragContainer) {\n      offsetDiff = getOffsetDiff(containingBlock, gridContainer);\n    }\n\n    // Stop current positioning animation.\n    if (item.isPositioning()) {\n      item._layout.stop(true, { transform: getTranslateString(currentLeft, currentTop) });\n    }\n\n    // Stop current migration animation.\n    if (migrate._isActive) {\n      currentLeft -= migrate._containerDiffX;\n      currentTop -= migrate._containerDiffY;\n      migrate.stop(true, { transform: getTranslateString(currentLeft, currentTop) });\n    }\n\n    // If item is being released reset release data.\n    if (item.isReleasing()) release._reset();\n\n    // Setup drag data.\n    this._isActive = true;\n    this._lastEvent = event;\n    this._container = dragContainer;\n    this._containingBlock = containingBlock;\n    this._elementClientX = elementRect.left;\n    this._elementClientY = elementRect.top;\n    this._left = this._gridX = currentLeft;\n    this._top = this._gridY = currentTop;\n\n    // Emit dragInit event.\n    grid._emit(eventDragInit, item, event);\n\n    // If a specific drag container is set and it is different from the\n    // grid's container element we need to cast some extra spells.\n    if (hasDragContainer) {\n      // Store the container offset diffs to drag data.\n      this._containerDiffX = offsetDiff.left;\n      this._containerDiffY = offsetDiff.top;\n\n      // If the dragged element is a child of the drag container all we need to\n      // do is setup the relative drag position data.\n      if (element.parentNode === dragContainer) {\n        this._gridX = currentLeft - this._containerDiffX;\n        this._gridY = currentTop - this._containerDiffY;\n      }\n\n      // Otherwise we need to append the element inside the correct container,\n      // setup the actual drag position data and adjust the element's translate\n      // values to account for the DOM position shift.\n      else {\n        this._left = currentLeft + this._containerDiffX;\n        this._top = currentTop + this._containerDiffY;\n        dragContainer.appendChild(element);\n        element.style[transformProp] = getTranslateString(this._left, this._top);\n      }\n    }\n\n    // Set drag class and bind scrollers.\n    addClass(element, settings.itemDraggingClass);\n    this._bindScrollListeners();\n\n    // Emit dragStart event.\n    grid._emit(eventDragStart, item, event);\n  };\n\n  /**\n   * Drag move handler.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   */\n  ItemDrag.prototype._onMove = function(event) {\n    var item = this._item;\n\n    // If item is not active, reset drag.\n    if (!item._isActive) {\n      this.stop();\n      return;\n    }\n\n    var settings = this._getGrid()._settings;\n    var axis = settings.dragAxis;\n    var xDiff = event.deltaX - this._lastEvent.deltaX;\n    var yDiff = event.deltaY - this._lastEvent.deltaY;\n\n    // Update last event.\n    this._lastEvent = event;\n\n    // Update horizontal position data.\n    if (axis !== 'y') {\n      this._left += xDiff;\n      this._gridX += xDiff;\n      this._elementClientX += xDiff;\n    }\n\n    // Update vertical position data.\n    if (axis !== 'x') {\n      this._top += yDiff;\n      this._gridY += yDiff;\n      this._elementClientY += yDiff;\n    }\n\n    // Do move prepare/apply handling in the next tick.\n    addMoveTick(item._id, this._prepareMove, this._applyMove);\n  };\n\n  /**\n   * Prepare dragged item for moving.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._prepareMove = function() {\n    // Do nothing if item is not active.\n    if (!this._item._isActive) return;\n\n    // If drag sort is enabled -> check overlap.\n    if (this._getGrid()._settings.dragSort) this._checkOverlapDebounce();\n  };\n\n  /**\n   * Apply movement to dragged item.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._applyMove = function() {\n    var item = this._item;\n\n    // Do nothing if item is not active.\n    if (!item._isActive) return;\n\n    // Update element's translateX/Y values.\n    item._element.style[transformProp] = getTranslateString(this._left, this._top);\n\n    // Emit dragMove event.\n    this._getGrid()._emit(eventDragMove, item, this._lastEvent);\n  };\n\n  /**\n   * Drag scroll handler.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   */\n  ItemDrag.prototype._onScroll = function(event) {\n    var item = this._item;\n\n    // If item is not active, reset drag.\n    if (!item._isActive) {\n      this.stop();\n      return;\n    }\n\n    // Update last scroll event.\n    this._lastScrollEvent = event;\n\n    // Do scroll prepare/apply handling in the next tick.\n    addScrollTick(item._id, this._prepareScroll, this._applyScroll);\n  };\n\n  /**\n   * Prepare dragged item for scrolling.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._prepareScroll = function() {\n    var item = this._item;\n\n    // If item is not active do nothing.\n    if (!item._isActive) return;\n\n    var element = item._element;\n    var grid = this._getGrid();\n    var settings = grid._settings;\n    var axis = settings.dragAxis;\n    var gridContainer = grid._element;\n    var offsetDiff;\n\n    // Calculate element's rect and x/y diff.\n    var rect = element.getBoundingClientRect();\n    var xDiff = this._elementClientX - rect.left;\n    var yDiff = this._elementClientY - rect.top;\n\n    // Update container diff.\n    if (this._container !== gridContainer) {\n      offsetDiff = getOffsetDiff(this._containingBlock, gridContainer);\n      this._containerDiffX = offsetDiff.left;\n      this._containerDiffY = offsetDiff.top;\n    }\n\n    // Update horizontal position data.\n    if (axis !== 'y') {\n      this._left += xDiff;\n      this._gridX = this._left - this._containerDiffX;\n    }\n\n    // Update vertical position data.\n    if (axis !== 'x') {\n      this._top += yDiff;\n      this._gridY = this._top - this._containerDiffY;\n    }\n\n    // Overlap handling.\n    if (settings.dragSort) this._checkOverlapDebounce();\n  };\n\n  /**\n   * Apply scroll to dragged item.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   */\n  ItemDrag.prototype._applyScroll = function() {\n    var item = this._item;\n\n    // If item is not active do nothing.\n    if (!item._isActive) return;\n\n    // Update element's translateX/Y values.\n    item._element.style[transformProp] = getTranslateString(this._left, this._top);\n\n    // Emit dragScroll event.\n    this._getGrid()._emit(eventDragScroll, item, this._lastScrollEvent);\n  };\n\n  /**\n   * Drag end handler.\n   *\n   * @private\n   * @memberof ItemDrag.prototype\n   * @param {Object} event\n   */\n  ItemDrag.prototype._onEnd = function(event) {\n    var item = this._item;\n    var element = item._element;\n    var grid = this._getGrid();\n    var settings = grid._settings;\n    var release = item._release;\n\n    // If item is not active, reset drag.\n    if (!item._isActive) {\n      this.stop();\n      return;\n    }\n\n    // Cancel queued move and scroll ticks.\n    cancelMoveTick(item._id);\n    cancelScrollTick(item._id);\n\n    // Finish currently queued overlap check.\n    settings.dragSort && this._checkOverlapDebounce('finish');\n\n    // Remove scroll listeners.\n    this._unbindScrollListeners();\n\n    // Setup release data.\n    release._containerDiffX = this._containerDiffX;\n    release._containerDiffY = this._containerDiffY;\n\n    // Reset drag data.\n    this._reset();\n\n    // Remove drag class name from element.\n    removeClass(element, settings.itemDraggingClass);\n\n    // Emit dragEnd event.\n    grid._emit(eventDragEnd, item, event);\n\n    // Finish up the migration process or start the release process.\n    this._isMigrating ? this._finishMigration() : release.start();\n  };\n\n  /**\n   * Private helpers\n   * ***************\n   */\n\n  /**\n   * Prevent default.\n   *\n   * @param {Object} e\n   */\n  function preventDefault(e) {\n    if (e.preventDefault) e.preventDefault();\n  }\n\n  /**\n   * Calculate how many percent the intersection area of two rectangles is from\n   * the maximum potential intersection area between the rectangles.\n   *\n   * @param {Rectangle} a\n   * @param {Rectangle} b\n   * @returns {Number}\n   *   - A number between 0-100.\n   */\n  function getRectOverlapScore(a, b) {\n    // Return 0 immediately if the rectangles do not overlap.\n    if (\n      a.left + a.width <= b.left ||\n      b.left + b.width <= a.left ||\n      a.top + a.height <= b.top ||\n      b.top + b.height <= a.top\n    ) {\n      return 0;\n    }\n\n    // Calculate intersection area's width, height, max height and max width.\n    var width = Math.min(a.left + a.width, b.left + b.width) - Math.max(a.left, b.left);\n    var height = Math.min(a.top + a.height, b.top + b.height) - Math.max(a.top, b.top);\n    var maxWidth = Math.min(a.width, b.width);\n    var maxHeight = Math.min(a.height, b.height);\n\n    return ((width * height) / (maxWidth * maxHeight)) * 100;\n  }\n\n  /**\n   * Get element's scroll parents.\n   *\n   * @param {HTMLElement} element\n   * @param {Array} [data]\n   * @returns {HTMLElement[]}\n   */\n  function getScrollParents(element, data) {\n    var ret = data || [];\n    var parent = element.parentNode;\n\n    //\n    // If transformed elements leak fixed elements.\n    //\n\n    if (hasTransformLeak) {\n      // If the element is fixed it can not have any scroll parents.\n      if (getStyle(element, 'position') === 'fixed') return ret;\n\n      // Find scroll parents.\n      while (parent && parent !== document && parent !== document.documentElement) {\n        if (isScrollable(parent)) ret.push(parent);\n        parent = getStyle(parent, 'position') === 'fixed' ? null : parent.parentNode;\n      }\n\n      // If parent is not fixed element, add window object as the last scroll\n      // parent.\n      parent !== null && ret.push(window);\n      return ret;\n    }\n\n    //\n    // If fixed elements behave as defined in the W3C specification.\n    //\n\n    // Find scroll parents.\n    while (parent && parent !== document) {\n      // If the currently looped element is fixed ignore all parents that are\n      // not transformed.\n      if (getStyle(element, 'position') === 'fixed' && !isTransformed(parent)) {\n        parent = parent.parentNode;\n        continue;\n      }\n\n      // Add the parent element to return items if it is scrollable.\n      if (isScrollable(parent)) ret.push(parent);\n\n      // Update element and parent references.\n      element = parent;\n      parent = parent.parentNode;\n    }\n\n    // If the last item is the root element, replace it with window. The root\n    // element scroll is propagated to the window.\n    if (ret[ret.length - 1] === document.documentElement) {\n      ret[ret.length - 1] = window;\n    }\n    // Otherwise add window as the last scroll parent.\n    else {\n      ret.push(window);\n    }\n\n    return ret;\n  }\n\n  /**\n   * Check if an element is scrollable.\n   *\n   * @param {HTMLElement} element\n   * @returns {Boolean}\n   */\n  function isScrollable(element) {\n    var overflow = getStyle(element, 'overflow');\n    if (overflow === 'auto' || overflow === 'scroll') return true;\n\n    overflow = getStyle(element, 'overflow-x');\n    if (overflow === 'auto' || overflow === 'scroll') return true;\n\n    overflow = getStyle(element, 'overflow-y');\n    if (overflow === 'auto' || overflow === 'scroll') return true;\n\n    return false;\n  }\n\n  /**\n   * Check if drag gesture can be interpreted as a click, based on final drag\n   * event data.\n   *\n   * @param {Object} element\n   * @returns {Boolean}\n   */\n  function isClick(event) {\n    return Math.abs(event.deltaX) < 2 && Math.abs(event.deltaY) < 2 && event.deltaTime < 200;\n  }\n\n  /**\n   * Check if an element is an anchor element and open the href url if possible.\n   *\n   * @param {HTMLElement} element\n   */\n  function openAnchorHref(element) {\n    // Make sure the element is anchor element.\n    if (element.tagName.toLowerCase() !== 'a') return;\n\n    // Get href and make sure it exists.\n    var href = element.getAttribute('href');\n    if (!href) return;\n\n    // Finally let's navigate to the link href.\n    var target = element.getAttribute('target');\n    if (target && target !== '_self') {\n      window.open(href, target);\n    } else {\n      window.location.href = href;\n    }\n  }\n\n  /**\n   * Detects if transformed elements leak fixed elements. According W3C\n   * transform rendering spec a transformed element should contain even fixed\n   * elements. Meaning that fixed elements are positioned relative to the\n   * closest transformed ancestor element instead of window. However, not every\n   * browser follows the spec (IE and older Firefox). So we need to test it.\n   * https://www.w3.org/TR/css3-2d-transforms/#transform-rendering\n   *\n   * Borrowed from Mezr (v0.6.1):\n   * https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L607\n   */\n  function checkTransformLeak() {\n    // No transforms -> definitely leaks.\n    if (!isTransformSupported) return true;\n\n    // No body available -> can't check it.\n    if (!document.body) return null;\n\n    // Do the test.\n    var elems = [0, 1].map(function(elem, isInner) {\n      elem = document.createElement('div');\n      elem.style.position = isInner ? 'fixed' : 'absolute';\n      elem.style.display = 'block';\n      elem.style.visibility = 'hidden';\n      elem.style.left = isInner ? '0px' : '1px';\n      elem.style[transformProp] = 'none';\n      return elem;\n    });\n    var outer = document.body.appendChild(elems[0]);\n    var inner = outer.appendChild(elems[1]);\n    var left = inner.getBoundingClientRect().left;\n    outer.style[transformProp] = 'scale(1)';\n    var ret = left === inner.getBoundingClientRect().left;\n    document.body.removeChild(outer);\n    return ret;\n  }\n\n  /**\n   * Queue constructor.\n   *\n   * @class\n   */\n  function Queue() {\n    this._queue = [];\n    this._isDestroyed = false;\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Add callback to the queue.\n   *\n   * @public\n   * @memberof Queue.prototype\n   * @param {Function} callback\n   * @returns {Queue}\n   */\n  Queue.prototype.add = function(callback) {\n    if (this._isDestroyed) return this;\n    this._queue.push(callback);\n    return this;\n  };\n\n  /**\n   * Process queue callbacks and reset the queue.\n   *\n   * @public\n   * @memberof Queue.prototype\n   * @param {*} arg1\n   * @param {*} arg2\n   * @returns {Queue}\n   */\n  Queue.prototype.flush = function(arg1, arg2) {\n    if (this._isDestroyed) return this;\n\n    var queue = this._queue;\n    var length = queue.length;\n    var i;\n\n    // Quit early if the queue is empty.\n    if (!length) return this;\n\n    var singleCallback = length === 1;\n    var snapshot = singleCallback ? queue[0] : queue.slice(0);\n\n    // Reset queue.\n    queue.length = 0;\n\n    // If we only have a single callback let's just call it.\n    if (singleCallback) {\n      snapshot(arg1, arg2);\n      return this;\n    }\n\n    // If we have multiple callbacks, let's process them.\n    for (i = 0; i < length; i++) {\n      snapshot[i](arg1, arg2);\n      if (this._isDestroyed) break;\n    }\n\n    return this;\n  };\n\n  /**\n   * Destroy Queue instance.\n   *\n   * @public\n   * @memberof Queue.prototype\n   * @returns {Queue}\n   */\n  Queue.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n\n    this._isDestroyed = true;\n    this._queue.length = 0;\n\n    return this;\n  };\n\n  /**\n   * Layout manager for Item instance.\n   *\n   * @class\n   * @param {Item} item\n   */\n  function ItemLayout(item) {\n    this._item = item;\n    this._isActive = false;\n    this._isDestroyed = false;\n    this._isInterrupted = false;\n    this._currentStyles = {};\n    this._targetStyles = {};\n    this._currentLeft = 0;\n    this._currentTop = 0;\n    this._offsetLeft = 0;\n    this._offsetTop = 0;\n    this._skipNextAnimation = false;\n    this._animateOptions = {\n      onFinish: this._finish.bind(this)\n    };\n    this._queue = new Queue();\n\n    // Bind animation handlers and finish method.\n    this._setupAnimation = this._setupAnimation.bind(this);\n    this._startAnimation = this._startAnimation.bind(this);\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Start item layout based on it's current data.\n   *\n   * @public\n   * @memberof ItemLayout.prototype\n   * @param {Boolean} [instant=false]\n   * @param {Function} [onFinish]\n   * @returns {ItemLayout}\n   */\n  ItemLayout.prototype.start = function(instant, onFinish) {\n    if (this._isDestroyed) return;\n\n    var item = this._item;\n    var element = item._element;\n    var release = item._release;\n    var gridSettings = item.getGrid()._settings;\n    var isPositioning = this._isActive;\n    var isJustReleased = release._isActive && release._isPositioningStarted === false;\n    var animDuration = isJustReleased\n      ? gridSettings.dragReleaseDuration\n      : gridSettings.layoutDuration;\n    var animEasing = isJustReleased ? gridSettings.dragReleaseEasing : gridSettings.layoutEasing;\n    var animEnabled = !instant && !this._skipNextAnimation && animDuration > 0;\n    var isAnimating;\n\n    // If the item is currently positioning process current layout callback\n    // queue with interrupted flag on.\n    if (isPositioning) this._queue.flush(true, item);\n\n    // Mark release positioning as started.\n    if (isJustReleased) release._isPositioningStarted = true;\n\n    // Push the callback to the callback queue.\n    if (typeof onFinish === 'function') this._queue.add(onFinish);\n\n    // If no animations are needed, easy peasy!\n    if (!animEnabled) {\n      this._updateOffsets();\n      this._updateTargetStyles();\n      isPositioning && cancelLayoutTick(item._id);\n      isAnimating = item._animate.isAnimating();\n      this.stop(false, this._targetStyles);\n      !isAnimating && setStyles(element, this._targetStyles);\n      this._skipNextAnimation = false;\n      return this._finish();\n    }\n\n    // Set item active and store some data for the animation that is about to be\n    // triggered.\n    this._isActive = true;\n    this._animateOptions.easing = animEasing;\n    this._animateOptions.duration = animDuration;\n    this._isInterrupted = isPositioning;\n\n    // Start the item's layout animation in the next tick.\n    addLayoutTick(item._id, this._setupAnimation, this._startAnimation);\n\n    return this;\n  };\n\n  /**\n   * Stop item's position animation if it is currently animating.\n   *\n   * @public\n   * @memberof ItemLayout.prototype\n   * @param {Boolean} [processCallbackQueue=false]\n   * @param {Object} [targetStyles]\n   * @returns {ItemLayout}\n   */\n  ItemLayout.prototype.stop = function(processCallbackQueue, targetStyles) {\n    if (this._isDestroyed || !this._isActive) return this;\n\n    var item = this._item;\n\n    // Cancel animation init.\n    cancelLayoutTick(item._id);\n\n    // Stop animation.\n    item._animate.stop(targetStyles);\n\n    // Remove positioning class.\n    removeClass(item._element, item.getGrid()._settings.itemPositioningClass);\n\n    // Reset active state.\n    this._isActive = false;\n\n    // Process callback queue if needed.\n    if (processCallbackQueue) this._queue.flush(true, item);\n\n    return this;\n  };\n\n  /**\n   * Destroy the instance and stop current animation if it is running.\n   *\n   * @public\n   * @memberof ItemLayout.prototype\n   * @returns {ItemLayout}\n   */\n  ItemLayout.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n    this.stop(true, {});\n    this._queue.destroy();\n    this._item = this._currentStyles = this._targetStyles = this._animateOptions = null;\n    this._isDestroyed = true;\n    return this;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Calculate and update item's current layout offset data.\n   *\n   * @private\n   * @memberof ItemLayout.prototype\n   */\n  ItemLayout.prototype._updateOffsets = function() {\n    if (this._isDestroyed) return;\n\n    var item = this._item;\n    var migrate = item._migrate;\n    var release = item._release;\n\n    this._offsetLeft = release._isActive\n      ? release._containerDiffX\n      : migrate._isActive\n        ? migrate._containerDiffX\n        : 0;\n\n    this._offsetTop = release._isActive\n      ? release._containerDiffY\n      : migrate._isActive\n        ? migrate._containerDiffY\n        : 0;\n  };\n\n  /**\n   * Calculate and update item's layout target styles.\n   *\n   * @private\n   * @memberof ItemLayout.prototype\n   */\n  ItemLayout.prototype._updateTargetStyles = function() {\n    if (this._isDestroyed) return;\n\n    var item = this._item;\n\n    this._targetStyles.transform = getTranslateString(\n      item._left + this._offsetLeft,\n      item._top + this._offsetTop\n    );\n  };\n\n  /**\n   * Finish item layout procedure.\n   *\n   * @private\n   * @memberof ItemLayout.prototype\n   */\n  ItemLayout.prototype._finish = function() {\n    if (this._isDestroyed) return;\n\n    var item = this._item;\n    var migrate = item._migrate;\n    var release = item._release;\n\n    // Mark the item as inactive and remove positioning classes.\n    if (this._isActive) {\n      this._isActive = false;\n      removeClass(item._element, item.getGrid()._settings.itemPositioningClass);\n    }\n\n    // Finish up release and migration.\n    if (release._isActive) release.stop();\n    if (migrate._isActive) migrate.stop();\n\n    // Process the callback queue.\n    this._queue.flush(false, item);\n  };\n\n  /**\n   * Prepare item for layout animation.\n   *\n   * @private\n   * @memberof ItemLayout.prototype\n   */\n  ItemLayout.prototype._setupAnimation = function() {\n    var element = this._item._element;\n    var translate = getTranslate(element);\n    this._currentLeft = translate.x;\n    this._currentTop = translate.y;\n  };\n\n  /**\n   * Start layout animation.\n   *\n   * @private\n   * @memberof ItemLayout.prototype\n   */\n  ItemLayout.prototype._startAnimation = function() {\n    var item = this._item;\n    var element = item._element;\n    var grid = item.getGrid();\n    var settings = grid._settings;\n\n    // Let's update the offset data and target styles.\n    this._updateOffsets();\n    this._updateTargetStyles();\n\n    // If the item is already in correct position let's quit early.\n    if (\n      item._left === this._currentLeft - this._offsetLeft &&\n      item._top === this._currentTop - this._offsetTop\n    ) {\n      if (this._isInterrupted) this.stop(false, this._targetStyles);\n      this._isActive = false;\n      this._finish();\n      return;\n    }\n\n    // Set item's positioning class if needed.\n    !this._isInterrupted && addClass(element, settings.itemPositioningClass);\n\n    // Get current styles for animation.\n    this._currentStyles.transform = getTranslateString(this._currentLeft, this._currentTop);\n\n    // Animate.\n    item._animate.start(this._currentStyles, this._targetStyles, this._animateOptions);\n  };\n\n  var tempStyles = {};\n\n  /**\n   * The migrate process handler constructor.\n   *\n   * @class\n   * @param {Item} item\n   */\n  function ItemMigrate(item) {\n    // Private props.\n    this._item = item;\n    this._isActive = false;\n    this._isDestroyed = false;\n    this._container = false;\n    this._containerDiffX = 0;\n    this._containerDiffY = 0;\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Start the migrate process of an item.\n   *\n   * @public\n   * @memberof ItemMigrate.prototype\n   * @param {Grid} targetGrid\n   * @param {GridSingleItemQuery} position\n   * @param {HTMLElement} [container]\n   * @returns {ItemMigrate}\n   */\n  ItemMigrate.prototype.start = function(targetGrid, position, container) {\n    if (this._isDestroyed) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var isVisible = item.isVisible();\n    var grid = item.getGrid();\n    var settings = grid._settings;\n    var targetSettings = targetGrid._settings;\n    var targetElement = targetGrid._element;\n    var targetItems = targetGrid._items;\n    var currentIndex = grid._items.indexOf(item);\n    var targetContainer = container || document.body;\n    var targetIndex;\n    var targetItem;\n    var currentContainer;\n    var offsetDiff;\n    var containerDiff;\n    var translate;\n    var translateX;\n    var translateY;\n\n    // Get target index.\n    if (typeof position === 'number') {\n      targetIndex = normalizeArrayIndex(targetItems, position, true);\n    } else {\n      targetItem = targetGrid._getItem(position);\n      /** @todo Consider throwing an error here instead of silently failing. */\n      if (!targetItem) return this;\n      targetIndex = targetItems.indexOf(targetItem);\n    }\n\n    // Get current translateX and translateY values if needed.\n    if (item.isPositioning() || this._isActive || item.isReleasing()) {\n      translate = getTranslate(element);\n      translateX = translate.x;\n      translateY = translate.y;\n    }\n\n    // Abort current positioning.\n    if (item.isPositioning()) {\n      item._layout.stop(true, { transform: getTranslateString(translateX, translateY) });\n    }\n\n    // Abort current migration.\n    if (this._isActive) {\n      translateX -= this._containerDiffX;\n      translateY -= this._containerDiffY;\n      this.stop(true, { transform: getTranslateString(translateX, translateY) });\n    }\n\n    // Abort current release.\n    if (item.isReleasing()) {\n      translateX -= item._release._containerDiffX;\n      translateY -= item._release._containerDiffY;\n      item._release.stop(true, { transform: getTranslateString(translateX, translateY) });\n    }\n\n    // Stop current visibility animations.\n    item._visibility._stopAnimation();\n\n    // Destroy current drag.\n    if (item._drag) item._drag.destroy();\n\n    // Process current visibility animation queue.\n    item._visibility._queue.flush(true, item);\n\n    // Emit beforeSend event.\n    if (grid._hasListeners(eventBeforeSend)) {\n      grid._emit(eventBeforeSend, {\n        item: item,\n        fromGrid: grid,\n        fromIndex: currentIndex,\n        toGrid: targetGrid,\n        toIndex: targetIndex\n      });\n    }\n\n    // Emit beforeReceive event.\n    if (targetGrid._hasListeners(eventBeforeReceive)) {\n      targetGrid._emit(eventBeforeReceive, {\n        item: item,\n        fromGrid: grid,\n        fromIndex: currentIndex,\n        toGrid: targetGrid,\n        toIndex: targetIndex\n      });\n    }\n\n    // Remove current classnames.\n    removeClass(element, settings.itemClass);\n    removeClass(element, settings.itemVisibleClass);\n    removeClass(element, settings.itemHiddenClass);\n\n    // Add new classnames.\n    addClass(element, targetSettings.itemClass);\n    addClass(element, isVisible ? targetSettings.itemVisibleClass : targetSettings.itemHiddenClass);\n\n    // Move item instance from current grid to target grid.\n    grid._items.splice(currentIndex, 1);\n    arrayInsert(targetItems, item, targetIndex);\n\n    // Update item's grid id reference.\n    item._gridId = targetGrid._id;\n\n    // Get current container.\n    currentContainer = element.parentNode;\n\n    // Move the item inside the target container if it's different than the\n    // current container.\n    if (targetContainer !== currentContainer) {\n      targetContainer.appendChild(element);\n      offsetDiff = getOffsetDiff(targetContainer, currentContainer, true);\n      if (!translate) {\n        translate = getTranslate(element);\n        translateX = translate.x;\n        translateY = translate.y;\n      }\n      element.style[transformProp] = getTranslateString(\n        translateX + offsetDiff.left,\n        translateY + offsetDiff.top\n      );\n    }\n\n    // Update child element's styles to reflect the current visibility state.\n    item._child.removeAttribute('style');\n    setStyles(item._child, isVisible ? targetSettings.visibleStyles : targetSettings.hiddenStyles);\n\n    // Update display style.\n    element.style.display = isVisible ? 'block' : 'hidden';\n\n    // Get offset diff for the migration data.\n    containerDiff = getOffsetDiff(targetContainer, targetElement, true);\n\n    // Update item's cached dimensions and sort data.\n    item._refreshDimensions();\n    item._refreshSortData();\n\n    // Create new drag handler.\n    item._drag = targetSettings.dragEnabled ? new ItemDrag(item) : null;\n\n    // Setup migration data.\n    this._isActive = true;\n    this._container = targetContainer;\n    this._containerDiffX = containerDiff.left;\n    this._containerDiffY = containerDiff.top;\n\n    // Emit send event.\n    if (grid._hasListeners(eventSend)) {\n      grid._emit(eventSend, {\n        item: item,\n        fromGrid: grid,\n        fromIndex: currentIndex,\n        toGrid: targetGrid,\n        toIndex: targetIndex\n      });\n    }\n\n    // Emit receive event.\n    if (targetGrid._hasListeners(eventReceive)) {\n      targetGrid._emit(eventReceive, {\n        item: item,\n        fromGrid: grid,\n        fromIndex: currentIndex,\n        toGrid: targetGrid,\n        toIndex: targetIndex\n      });\n    }\n\n    return this;\n  };\n\n  /**\n   * End the migrate process of an item. This method can be used to abort an\n   * ongoing migrate process (animation) or finish the migrate process.\n   *\n   * @public\n   * @memberof ItemMigrate.prototype\n   * @param {Boolean} [abort=false]\n   *  - Should the migration be aborted?\n   * @param {Object} [currentStyles]\n   *  - Optional current translateX and translateY styles.\n   * @returns {ItemMigrate}\n   */\n  ItemMigrate.prototype.stop = function(abort, currentStyles) {\n    if (this._isDestroyed || !this._isActive) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var grid = item.getGrid();\n    var gridElement = grid._element;\n    var translate;\n\n    if (this._container !== gridElement) {\n      if (!currentStyles) {\n        if (abort) {\n          translate = getTranslate(element);\n          tempStyles.transform = getTranslateString(\n            translate.x - this._containerDiffX,\n            translate.y - this._containerDiffY\n          );\n        } else {\n          tempStyles.transform = getTranslateString(item._left, item._top);\n        }\n        currentStyles = tempStyles;\n      }\n      gridElement.appendChild(element);\n      setStyles(element, currentStyles);\n    }\n\n    this._isActive = false;\n    this._container = null;\n    this._containerDiffX = 0;\n    this._containerDiffY = 0;\n\n    return this;\n  };\n\n  /**\n   * Destroy instance.\n   *\n   * @public\n   * @memberof ItemMigrate.prototype\n   * @returns {ItemMigrate}\n   */\n  ItemMigrate.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n    this.stop(true);\n    this._item = null;\n    this._isDestroyed = true;\n    return this;\n  };\n\n  var tempStyles$1 = {};\n\n  /**\n   * The release process handler constructor. Although this might seem as proper\n   * fit for the drag process this needs to be separated into it's own logic\n   * because there might be a scenario where drag is disabled, but the release\n   * process still needs to be implemented (dragging from a grid to another).\n   *\n   * @class\n   * @param {Item} item\n   */\n  function ItemRelease(item) {\n    this._item = item;\n    this._isActive = false;\n    this._isDestroyed = false;\n    this._isPositioningStarted = false;\n    this._containerDiffX = 0;\n    this._containerDiffY = 0;\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Start the release process of an item.\n   *\n   * @public\n   * @memberof ItemRelease.prototype\n   * @returns {ItemRelease}\n   */\n  ItemRelease.prototype.start = function() {\n    if (this._isDestroyed || this._isActive) return this;\n\n    var item = this._item;\n    var grid = item.getGrid();\n\n    // Flag release as active.\n    this._isActive = true;\n\n    // Add release class name to the released element.\n    addClass(item._element, grid._settings.itemReleasingClass);\n\n    // Emit dragReleaseStart event.\n    grid._emit(eventDragReleaseStart, item);\n\n    // Position the released item.\n    item._layout.start(false);\n\n    return this;\n  };\n\n  /**\n   * End the release process of an item. This method can be used to abort an\n   * ongoing release process (animation) or finish the release process.\n   *\n   * @public\n   * @memberof ItemRelease.prototype\n   * @param {Boolean} [abort=false]\n   *  - Should the release be aborted? When true, the release end event won't be\n   *    emitted. Set to true only when you need to abort the release process\n   *    while the item is animating to it's position.\n   * @param {Object} [currentStyles]\n   *  - Optional current translateX and translateY styles.\n   * @returns {ItemRelease}\n   */\n  ItemRelease.prototype.stop = function(abort, currentStyles) {\n    if (this._isDestroyed || !this._isActive) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var grid = item.getGrid();\n    var container = grid._element;\n    var translate;\n\n    // Reset data and remove releasing class name from the element.\n    this._reset();\n\n    // If the released element is outside the grid's container element put it\n    // back there and adjust position accordingly.\n    if (element.parentNode !== container) {\n      if (!currentStyles) {\n        if (abort) {\n          translate = getTranslate(element);\n          tempStyles$1.transform = getTranslateString(\n            translate.x - this._containerDiffX,\n            translate.y - this._containerDiffY\n          );\n        } else {\n          tempStyles$1.transform = getTranslateString(item._left, item._top);\n        }\n        currentStyles = tempStyles$1;\n      }\n      container.appendChild(element);\n      setStyles(element, currentStyles);\n    }\n\n    // Emit dragReleaseEnd event.\n    if (!abort) grid._emit(eventDragReleaseEnd, item);\n\n    return this;\n  };\n\n  /**\n   * Destroy instance.\n   *\n   * @public\n   * @memberof ItemRelease.prototype\n   * @returns {ItemRelease}\n   */\n  ItemRelease.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n    this.stop(true);\n    this._item = null;\n    this._isDestroyed = true;\n    return this;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Reset public data and remove releasing class.\n   *\n   * @private\n   * @memberof ItemRelease.prototype\n   */\n  ItemRelease.prototype._reset = function() {\n    if (this._isDestroyed) return;\n    var item = this._item;\n    this._isActive = false;\n    this._isPositioningStarted = false;\n    this._containerDiffX = 0;\n    this._containerDiffY = 0;\n    removeClass(item._element, item.getGrid()._settings.itemReleasingClass);\n  };\n\n  /**\n   * Get current values of the provided styles definition object.\n   *\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {Object}\n   */\n  function getCurrentStyles(element, styles) {\n    var current = {};\n    for (var prop in styles) {\n      current[prop] = getStyle(element, getStyleName(prop));\n    }\n    return current;\n  }\n\n  /**\n   * Visibility manager for Item instance.\n   *\n   * @class\n   * @param {Item} item\n   */\n  function ItemVisibility(item) {\n    var isActive = item._isActive;\n    var element = item._element;\n    var settings = item.getGrid()._settings;\n\n    this._item = item;\n    this._isDestroyed = false;\n\n    // Set up visibility states.\n    this._isHidden = !isActive;\n    this._isHiding = false;\n    this._isShowing = false;\n\n    // Callback queue.\n    this._queue = new Queue();\n\n    // Bind show/hide finishers.\n    this._finishShow = this._finishShow.bind(this);\n    this._finishHide = this._finishHide.bind(this);\n\n    // Force item to be either visible or hidden on init.\n    element.style.display = isActive ? 'block' : 'none';\n\n    // Set visible/hidden class.\n    addClass(element, isActive ? settings.itemVisibleClass : settings.itemHiddenClass);\n\n    // Set initial styles for the child element.\n    setStyles(item._child, isActive ? settings.visibleStyles : settings.hiddenStyles);\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Show item.\n   *\n   * @public\n   * @memberof ItemVisibility.prototype\n   * @param {Boolean} instant\n   * @param {Function} [onFinish]\n   * @returns {ItemVisibility}\n   */\n  ItemVisibility.prototype.show = function(instant, onFinish) {\n    if (this._isDestroyed) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var queue = this._queue;\n    var callback = typeof onFinish === 'function' ? onFinish : null;\n    var grid = item.getGrid();\n    var settings = grid._settings;\n\n    // If item is visible call the callback and be done with it.\n    if (!this._isShowing && !this._isHidden) {\n      callback && callback(false, item);\n      return this;\n    }\n\n    // If item is showing and does not need to be shown instantly, let's just\n    // push callback to the callback queue and be done with it.\n    if (this._isShowing && !instant) {\n      callback && queue.add(callback);\n      return this;\n    }\n\n    // If the item is hiding or hidden process the current visibility callback\n    // queue with the interrupted flag active, update classes and set display\n    // to block if necessary.\n    if (!this._isShowing) {\n      queue.flush(true, item);\n      removeClass(element, settings.itemHiddenClass);\n      addClass(element, settings.itemVisibleClass);\n      if (!this._isHiding) element.style.display = 'block';\n    }\n\n    // Push callback to the callback queue.\n    callback && queue.add(callback);\n\n    // Update visibility states.\n    item._isActive = this._isShowing = true;\n    this._isHiding = this._isHidden = false;\n\n    // Finally let's start show animation.\n    this._startAnimation(true, instant, this._finishShow);\n\n    return this;\n  };\n\n  /**\n   * Hide item.\n   *\n   * @public\n   * @memberof ItemVisibility.prototype\n   * @param {Boolean} instant\n   * @param {Function} [onFinish]\n   * @returns {ItemVisibility}\n   */\n  ItemVisibility.prototype.hide = function(instant, onFinish) {\n    if (this._isDestroyed) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var queue = this._queue;\n    var callback = typeof onFinish === 'function' ? onFinish : null;\n    var grid = item.getGrid();\n    var settings = grid._settings;\n\n    // If item is already hidden call the callback and be done with it.\n    if (!this._isHiding && this._isHidden) {\n      callback && callback(false, item);\n      return this;\n    }\n\n    // If item is hiding and does not need to be hidden instantly, let's just\n    // push callback to the callback queue and be done with it.\n    if (this._isHiding && !instant) {\n      callback && queue.add(callback);\n      return this;\n    }\n\n    // If the item is showing or visible process the current visibility callback\n    // queue with the interrupted flag active, update classes and set display\n    // to block if necessary.\n    if (!this._isHiding) {\n      queue.flush(true, item);\n      addClass(element, settings.itemHiddenClass);\n      removeClass(element, settings.itemVisibleClass);\n    }\n\n    // Push callback to the callback queue.\n    callback && queue.add(callback);\n\n    // Update visibility states.\n    this._isHidden = this._isHiding = true;\n    item._isActive = this._isShowing = false;\n\n    // Finally let's start hide animation.\n    this._startAnimation(false, instant, this._finishHide);\n\n    return this;\n  };\n\n  /**\n   * Destroy the instance and stop current animation if it is running.\n   *\n   * @public\n   * @memberof ItemVisibility.prototype\n   * @returns {ItemVisibility}\n   */\n  ItemVisibility.prototype.destroy = function() {\n    if (this._isDestroyed) return this;\n\n    var item = this._item;\n    var element = item._element;\n    var grid = item.getGrid();\n    var queue = this._queue;\n    var settings = grid._settings;\n\n    // Stop visibility animation.\n    this._stopAnimation({});\n\n    // Fire all uncompleted callbacks with interrupted flag and destroy the queue.\n    queue.flush(true, item).destroy();\n\n    // Remove visible/hidden classes.\n    removeClass(element, settings.itemVisibleClass);\n    removeClass(element, settings.itemHiddenClass);\n\n    // Reset state.\n    this._item = null;\n    this._isHiding = this._isShowing = false;\n    this._isDestroyed = this._isHidden = true;\n\n    return this;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Start visibility animation.\n   *\n   * @private\n   * @memberof ItemVisibility.prototype\n   * @param {Boolean} toVisible\n   * @param {Boolean} [instant]\n   * @param {Function} [onFinish]\n   */\n  ItemVisibility.prototype._startAnimation = function(toVisible, instant, onFinish) {\n    if (this._isDestroyed) return;\n\n    var item = this._item;\n    var settings = item.getGrid()._settings;\n    var targetStyles = toVisible ? settings.visibleStyles : settings.hiddenStyles;\n    var duration = parseInt(toVisible ? settings.showDuration : settings.hideDuration) || 0;\n    var easing = (toVisible ? settings.showEasing : settings.hideEasing) || 'ease';\n    var isInstant = instant || duration <= 0;\n    var currentStyles;\n\n    // No target styles? Let's quit early.\n    if (!targetStyles) {\n      onFinish && onFinish();\n      return;\n    }\n\n    // Cancel queued visibility tick.\n    cancelVisibilityTick(item._id);\n\n    // If we need to apply the styles instantly without animation.\n    if (isInstant) {\n      if (item._animateChild.isAnimating()) {\n        item._animateChild.stop(targetStyles);\n      } else {\n        setStyles(item._child, targetStyles);\n      }\n      onFinish && onFinish();\n      return;\n    }\n\n    // Start the animation in the next tick (to avoid layout thrashing).\n    addVisibilityTick(\n      item._id,\n      function() {\n        currentStyles = getCurrentStyles(item._child, targetStyles);\n      },\n      function() {\n        item._animateChild.start(currentStyles, targetStyles, {\n          duration: duration,\n          easing: easing,\n          onFinish: onFinish\n        });\n      }\n    );\n  };\n\n  /**\n   * Stop visibility animation.\n   *\n   * @private\n   * @memberof ItemVisibility.prototype\n   * @param {Object} [targetStyles]\n   */\n  ItemVisibility.prototype._stopAnimation = function(targetStyles) {\n    if (this._isDestroyed) return;\n    var item = this._item;\n    cancelVisibilityTick(item._id);\n    item._animateChild.stop(targetStyles);\n  };\n\n  /**\n   * Finish show procedure.\n   *\n   * @private\n   * @memberof ItemVisibility.prototype\n   */\n  ItemVisibility.prototype._finishShow = function() {\n    if (this._isHidden) return;\n    this._isShowing = false;\n    this._queue.flush(false, this._item);\n  };\n\n  /**\n   * Finish hide procedure.\n   *\n   * @private\n   * @memberof ItemVisibility.prototype\n   */\n  var finishStyles = {};\n  ItemVisibility.prototype._finishHide = function() {\n    if (!this._isHidden) return;\n    var item = this._item;\n    this._isHiding = false;\n    finishStyles.transform = getTranslateString(0, 0);\n    item._layout.stop(true, finishStyles);\n    item._element.style.display = 'none';\n    this._queue.flush(false, item);\n  };\n\n  var id = 0;\n\n  /**\n   * Returns a unique numeric id (increments a base value on every call).\n   * @returns {Number}\n   */\n  function createUid() {\n    return ++id;\n  }\n\n  /**\n   * Creates a new Item instance for a Grid instance.\n   *\n   * @class\n   * @param {Grid} grid\n   * @param {HTMLElement} element\n   * @param {Boolean} [isActive]\n   */\n  function Item(grid, element, isActive) {\n    var settings = grid._settings;\n\n    // Create instance id.\n    this._id = createUid();\n\n    // Reference to connected Grid instance's id.\n    this._gridId = grid._id;\n\n    // Destroyed flag.\n    this._isDestroyed = false;\n\n    // Set up initial positions.\n    this._left = 0;\n    this._top = 0;\n\n    // The elements.\n    this._element = element;\n    this._child = element.children[0];\n\n    // If the provided item element is not a direct child of the grid container\n    // element, append it to the grid container.\n    if (element.parentNode !== grid._element) {\n      grid._element.appendChild(element);\n    }\n\n    // Set item class.\n    addClass(element, settings.itemClass);\n\n    // If isActive is not defined, let's try to auto-detect it.\n    if (typeof isActive !== 'boolean') {\n      isActive = getStyle(element, 'display') !== 'none';\n    }\n\n    // Set up active state (defines if the item is considered part of the layout\n    // or not).\n    this._isActive = isActive;\n\n    // Set element's initial position styles.\n    element.style.left = '0';\n    element.style.top = '0';\n    element.style[transformProp] = getTranslateString(0, 0);\n\n    // Initiate item's animation controllers.\n    this._animate = new ItemAnimate(element);\n    this._animateChild = new ItemAnimate(this._child);\n\n    // Setup visibility handler.\n    this._visibility = new ItemVisibility(this);\n\n    // Set up layout handler.\n    this._layout = new ItemLayout(this);\n\n    // Set up migration handler data.\n    this._migrate = new ItemMigrate(this);\n\n    // Set up release handler\n    this._release = new ItemRelease(this);\n\n    // Set up drag handler.\n    this._drag = settings.dragEnabled ? new ItemDrag(this) : null;\n\n    // Set up the initial dimensions and sort data.\n    this._refreshDimensions();\n    this._refreshSortData();\n  }\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Get the instance grid reference.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Grid}\n   */\n  Item.prototype.getGrid = function() {\n    return gridInstances[this._gridId];\n  };\n\n  /**\n   * Get the instance element.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {HTMLElement}\n   */\n  Item.prototype.getElement = function() {\n    return this._element;\n  };\n\n  /**\n   * Get instance element's cached width.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Number}\n   */\n  Item.prototype.getWidth = function() {\n    return this._width;\n  };\n\n  /**\n   * Get instance element's cached height.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Number}\n   */\n  Item.prototype.getHeight = function() {\n    return this._height;\n  };\n\n  /**\n   * Get instance element's cached margins.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Object}\n   *   - The returned object contains left, right, top and bottom properties\n   *     which indicate the item element's cached margins.\n   */\n  Item.prototype.getMargin = function() {\n    return {\n      left: this._marginLeft,\n      right: this._marginRight,\n      top: this._marginTop,\n      bottom: this._marginBottom\n    };\n  };\n\n  /**\n   * Get instance element's cached position.\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Object}\n   *   - The returned object contains left and top properties which indicate the\n   *     item element's cached position in the grid.\n   */\n  Item.prototype.getPosition = function() {\n    return {\n      left: this._left,\n      top: this._top\n    };\n  };\n\n  /**\n   * Is the item active?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isActive = function() {\n    return this._isActive;\n  };\n\n  /**\n   * Is the item visible?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isVisible = function() {\n    return !!this._visibility && !this._visibility._isHidden;\n  };\n\n  /**\n   * Is the item being animated to visible?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isShowing = function() {\n    return !!(this._visibility && this._visibility._isShowing);\n  };\n\n  /**\n   * Is the item being animated to hidden?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isHiding = function() {\n    return !!(this._visibility && this._visibility._isHiding);\n  };\n\n  /**\n   * Is the item positioning?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isPositioning = function() {\n    return !!(this._layout && this._layout._isActive);\n  };\n\n  /**\n   * Is the item being dragged?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isDragging = function() {\n    return !!(this._drag && this._drag._isActive);\n  };\n\n  /**\n   * Is the item being released?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isReleasing = function() {\n    return !!(this._release && this._release._isActive);\n  };\n\n  /**\n   * Is the item destroyed?\n   *\n   * @public\n   * @memberof Item.prototype\n   * @returns {Boolean}\n   */\n  Item.prototype.isDestroyed = function() {\n    return this._isDestroyed;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Recalculate item's dimensions.\n   *\n   * @private\n   * @memberof Item.prototype\n   */\n  Item.prototype._refreshDimensions = function() {\n    if (this._isDestroyed || this._visibility._isHidden) return;\n\n    var element = this._element;\n    var rect = element.getBoundingClientRect();\n\n    // Calculate width and height.\n    this._width = rect.width;\n    this._height = rect.height;\n\n    // Calculate margins (ignore negative margins).\n    this._marginLeft = Math.max(0, getStyleAsFloat(element, 'margin-left'));\n    this._marginRight = Math.max(0, getStyleAsFloat(element, 'margin-right'));\n    this._marginTop = Math.max(0, getStyleAsFloat(element, 'margin-top'));\n    this._marginBottom = Math.max(0, getStyleAsFloat(element, 'margin-bottom'));\n  };\n\n  /**\n   * Fetch and store item's sort data.\n   *\n   * @private\n   * @memberof Item.prototype\n   */\n  Item.prototype._refreshSortData = function() {\n    if (this._isDestroyed) return;\n\n    var data = (this._sortData = {});\n    var getters = this.getGrid()._settings.sortData;\n    var prop;\n\n    for (prop in getters) {\n      data[prop] = getters[prop](this, this._element);\n    }\n  };\n\n  /**\n   * Destroy item instance.\n   *\n   * @private\n   * @memberof Item.prototype\n   * @param {Boolean} [removeElement=false]\n   */\n  Item.prototype._destroy = function(removeElement) {\n    if (this._isDestroyed) return;\n\n    var element = this._element;\n    var grid = this.getGrid();\n    var settings = grid._settings;\n    var index = grid._items.indexOf(this);\n\n    // Destroy handlers.\n    this._release.destroy();\n    this._migrate.destroy();\n    this._layout.destroy();\n    this._visibility.destroy();\n    this._animate.destroy();\n    this._animateChild.destroy();\n    this._drag && this._drag.destroy();\n\n    // Remove all inline styles.\n    element.removeAttribute('style');\n    this._child.removeAttribute('style');\n\n    // Remove item class.\n    removeClass(element, settings.itemClass);\n\n    // Remove item from Grid instance if it still exists there.\n    index > -1 && grid._items.splice(index, 1);\n\n    // Remove element from DOM.\n    removeElement && element.parentNode.removeChild(element);\n\n    // Reset state.\n    this._isActive = false;\n    this._isDestroyed = true;\n  };\n\n  /**\n   * This is the default layout algorithm for Muuri. Based on MAXRECTS approach\n   * as described by Jukka Jylänki in his survey: \"A Thousand Ways to Pack the\n   * Bin - A Practical Approach to Two-Dimensional Rectangle Bin Packing.\".\n   *\n   * @class\n   */\n  function Packer() {\n    this._slots = [];\n    this._slotSizes = [];\n    this._freeSlots = [];\n    this._newSlots = [];\n    this._rectItem = {};\n    this._rectStore = [];\n    this._rectId = 0;\n\n    // The layout return data, which will be populated in getLayout.\n    this._layout = {\n      slots: null,\n      setWidth: false,\n      setHeight: false,\n      width: false,\n      height: false\n    };\n\n    // Bind sort handlers.\n    this._sortRectsLeftTop = this._sortRectsLeftTop.bind(this);\n    this._sortRectsTopLeft = this._sortRectsTopLeft.bind(this);\n  }\n\n  /**\n   * @public\n   * @memberof Packer.prototype\n   * @param {Item[]} items\n   * @param {Number} width\n   * @param {Number} height\n   * @param {Number[]} [slots]\n   * @param {Object} [options]\n   * @param {Boolean} [options.fillGaps=false]\n   * @param {Boolean} [options.horizontal=false]\n   * @param {Boolean} [options.alignRight=false]\n   * @param {Boolean} [options.alignBottom=false]\n   * @returns {LayoutData}\n   */\n  Packer.prototype.getLayout = function(items, width, height, slots, options) {\n    var layout = this._layout;\n    var fillGaps = !!(options && options.fillGaps);\n    var isHorizontal = !!(options && options.horizontal);\n    var alignRight = !!(options && options.alignRight);\n    var alignBottom = !!(options && options.alignBottom);\n    var rounding = !!(options && options.rounding);\n    var slotSizes = this._slotSizes;\n    var i;\n\n    // Reset layout data.\n    layout.slots = slots ? slots : this._slots;\n    layout.width = isHorizontal ? 0 : rounding ? Math.round(width) : width;\n    layout.height = !isHorizontal ? 0 : rounding ? Math.round(height) : height;\n    layout.setWidth = isHorizontal;\n    layout.setHeight = !isHorizontal;\n\n    // Make sure slots and slot size arrays are reset.\n    layout.slots.length = 0;\n    slotSizes.length = 0;\n\n    // No need to go further if items do not exist.\n    if (!items.length) return layout;\n\n    // Find slots for items.\n    for (i = 0; i < items.length; i++) {\n      this._addSlot(items[i], isHorizontal, fillGaps, rounding, alignRight || alignBottom);\n    }\n\n    // If the alignment is set to right we need to adjust the results.\n    if (alignRight) {\n      for (i = 0; i < layout.slots.length; i = i + 2) {\n        layout.slots[i] = layout.width - (layout.slots[i] + slotSizes[i]);\n      }\n    }\n\n    // If the alignment is set to bottom we need to adjust the results.\n    if (alignBottom) {\n      for (i = 1; i < layout.slots.length; i = i + 2) {\n        layout.slots[i] = layout.height - (layout.slots[i] + slotSizes[i]);\n      }\n    }\n\n    // Reset slots arrays and rect id.\n    slotSizes.length = 0;\n    this._freeSlots.length = 0;\n    this._newSlots.length = 0;\n    this._rectId = 0;\n\n    return layout;\n  };\n\n  /**\n   * Calculate position for the layout item. Returns the left and top position\n   * of the item in pixels.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {Item} item\n   * @param {Boolean} isHorizontal\n   * @param {Boolean} fillGaps\n   * @param {Boolean} rounding\n   * @returns {Array}\n   */\n  Packer.prototype._addSlot = (function() {\n    var leeway = 0.001;\n    var itemSlot = {};\n    return function(item, isHorizontal, fillGaps, rounding, trackSize) {\n      var layout = this._layout;\n      var freeSlots = this._freeSlots;\n      var newSlots = this._newSlots;\n      var rect;\n      var rectId;\n      var potentialSlots;\n      var ignoreCurrentSlots;\n      var i;\n      var ii;\n\n      // Reset new slots.\n      newSlots.length = 0;\n\n      // Set item slot initial data.\n      itemSlot.left = null;\n      itemSlot.top = null;\n      itemSlot.width = item._width + item._marginLeft + item._marginRight;\n      itemSlot.height = item._height + item._marginTop + item._marginBottom;\n\n      // Round item slot width and height if needed.\n      if (rounding) {\n        itemSlot.width = Math.round(itemSlot.width);\n        itemSlot.height = Math.round(itemSlot.height);\n      }\n\n      // Try to find a slot for the item.\n      for (i = 0; i < freeSlots.length; i++) {\n        rectId = freeSlots[i];\n        if (!rectId) continue;\n        rect = this._getRect(rectId);\n        if (itemSlot.width <= rect.width + leeway && itemSlot.height <= rect.height + leeway) {\n          itemSlot.left = rect.left;\n          itemSlot.top = rect.top;\n          break;\n        }\n      }\n\n      // If no slot was found for the item.\n      if (itemSlot.left === null) {\n        // Position the item in to the bottom left (vertical mode) or top right\n        // (horizontal mode) of the grid.\n        itemSlot.left = !isHorizontal ? 0 : layout.width;\n        itemSlot.top = !isHorizontal ? layout.height : 0;\n\n        // If gaps don't needs filling do not add any current slots to the new\n        // slots array.\n        if (!fillGaps) {\n          ignoreCurrentSlots = true;\n        }\n      }\n\n      // In vertical mode, if the item's bottom overlaps the grid's bottom.\n      if (!isHorizontal && itemSlot.top + itemSlot.height > layout.height) {\n        // If item is not aligned to the left edge, create a new slot.\n        if (itemSlot.left > 0) {\n          newSlots.push(this._addRect(0, layout.height, itemSlot.left, Infinity));\n        }\n\n        // If item is not aligned to the right edge, create a new slot.\n        if (itemSlot.left + itemSlot.width < layout.width) {\n          newSlots.push(\n            this._addRect(\n              itemSlot.left + itemSlot.width,\n              layout.height,\n              layout.width - itemSlot.left - itemSlot.width,\n              Infinity\n            )\n          );\n        }\n\n        // Update grid height.\n        layout.height = itemSlot.top + itemSlot.height;\n      }\n\n      // In horizontal mode, if the item's right overlaps the grid's right edge.\n      if (isHorizontal && itemSlot.left + itemSlot.width > layout.width) {\n        // If item is not aligned to the top, create a new slot.\n        if (itemSlot.top > 0) {\n          newSlots.push(this._addRect(layout.width, 0, Infinity, itemSlot.top));\n        }\n\n        // If item is not aligned to the bottom, create a new slot.\n        if (itemSlot.top + itemSlot.height < layout.height) {\n          newSlots.push(\n            this._addRect(\n              layout.width,\n              itemSlot.top + itemSlot.height,\n              Infinity,\n              layout.height - itemSlot.top - itemSlot.height\n            )\n          );\n        }\n\n        // Update grid width.\n        layout.width = itemSlot.left + itemSlot.width;\n      }\n\n      // Clean up the current slots making sure there are no old slots that\n      // overlap with the item. If an old slot overlaps with the item, split it\n      // into smaller slots if necessary.\n      for (i = fillGaps ? 0 : ignoreCurrentSlots ? freeSlots.length : i; i < freeSlots.length; i++) {\n        rectId = freeSlots[i];\n        if (!rectId) continue;\n        rect = this._getRect(rectId);\n        potentialSlots = this._splitRect(rect, itemSlot);\n        for (ii = 0; ii < potentialSlots.length; ii++) {\n          rectId = potentialSlots[ii];\n          rect = this._getRect(rectId);\n          // Let's make sure here that we have a big enough slot\n          // (width/height > 0.49px) and also let's make sure that the slot is\n          // within the boundaries of the grid.\n          if (\n            rect.width > 0.49 &&\n            rect.height > 0.49 &&\n            ((!isHorizontal && rect.top < layout.height) ||\n              (isHorizontal && rect.left < layout.width))\n          ) {\n            newSlots.push(rectId);\n          }\n        }\n      }\n\n      // Sanitize new slots.\n      if (newSlots.length) {\n        this._purgeRects(newSlots).sort(\n          isHorizontal ? this._sortRectsLeftTop : this._sortRectsTopLeft\n        );\n      }\n\n      // Update layout width/height.\n      if (isHorizontal) {\n        layout.width = Math.max(layout.width, itemSlot.left + itemSlot.width);\n      } else {\n        layout.height = Math.max(layout.height, itemSlot.top + itemSlot.height);\n      }\n\n      // Add item slot data to layout slots (and store the slot size for later\n      // usage too if necessary).\n      layout.slots.push(itemSlot.left, itemSlot.top);\n      if (trackSize) this._slotSizes.push(itemSlot.width, itemSlot.height);\n\n      // Free/new slots switcheroo!\n      this._freeSlots = newSlots;\n      this._newSlots = freeSlots;\n    };\n  })();\n\n  /**\n   * Add a new rectangle to the rectangle store. Returns the id of the new\n   * rectangle.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} width\n   * @param {Number} height\n   * @returns {RectId}\n   */\n  Packer.prototype._addRect = function(left, top, width, height) {\n    var rectId = ++this._rectId;\n    var rectStore = this._rectStore;\n\n    rectStore[rectId] = left || 0;\n    rectStore[++this._rectId] = top || 0;\n    rectStore[++this._rectId] = width || 0;\n    rectStore[++this._rectId] = height || 0;\n\n    return rectId;\n  };\n\n  /**\n   * Get rectangle data from the rectangle store by id. Optionally you can\n   * provide a target object where the rectangle data will be written in. By\n   * default an internal object is reused as a target object.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {RectId} id\n   * @param {Object} [target]\n   * @returns {Object}\n   */\n  Packer.prototype._getRect = function(id, target) {\n    var rectItem = target ? target : this._rectItem;\n    var rectStore = this._rectStore;\n\n    rectItem.left = rectStore[id] || 0;\n    rectItem.top = rectStore[++id] || 0;\n    rectItem.width = rectStore[++id] || 0;\n    rectItem.height = rectStore[++id] || 0;\n\n    return rectItem;\n  };\n\n  /**\n   * Punch a hole into a rectangle and split the remaining area into smaller\n   * rectangles (4 at max).\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {Rectangle} rect\n   * @param {Rectangle} hole\n   * @returns {RectId[]}\n   */\n  Packer.prototype._splitRect = (function() {\n    var results = [];\n    return function(rect, hole) {\n      // Reset old results.\n      results.length = 0;\n\n      // If the rect does not overlap with the hole add rect to the return data\n      // as is.\n      if (!this._doRectsOverlap(rect, hole)) {\n        results.push(this._addRect(rect.left, rect.top, rect.width, rect.height));\n        return results;\n      }\n\n      // Left split.\n      if (rect.left < hole.left) {\n        results.push(this._addRect(rect.left, rect.top, hole.left - rect.left, rect.height));\n      }\n\n      // Right split.\n      if (rect.left + rect.width > hole.left + hole.width) {\n        results.push(\n          this._addRect(\n            hole.left + hole.width,\n            rect.top,\n            rect.left + rect.width - (hole.left + hole.width),\n            rect.height\n          )\n        );\n      }\n\n      // Top split.\n      if (rect.top < hole.top) {\n        results.push(this._addRect(rect.left, rect.top, rect.width, hole.top - rect.top));\n      }\n\n      // Bottom split.\n      if (rect.top + rect.height > hole.top + hole.height) {\n        results.push(\n          this._addRect(\n            rect.left,\n            hole.top + hole.height,\n            rect.width,\n            rect.top + rect.height - (hole.top + hole.height)\n          )\n        );\n      }\n\n      return results;\n    };\n  })();\n\n  /**\n   * Check if two rectangles overlap.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {Rectangle} a\n   * @param {Rectangle} b\n   * @returns {Boolean}\n   */\n  Packer.prototype._doRectsOverlap = function(a, b) {\n    return !(\n      a.left + a.width <= b.left ||\n      b.left + b.width <= a.left ||\n      a.top + a.height <= b.top ||\n      b.top + b.height <= a.top\n    );\n  };\n\n  /**\n   * Check if a rectangle is fully within another rectangle.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {Rectangle} a\n   * @param {Rectangle} b\n   * @returns {Boolean}\n   */\n  Packer.prototype._isRectWithinRect = function(a, b) {\n    return (\n      a.left >= b.left &&\n      a.top >= b.top &&\n      a.left + a.width <= b.left + b.width &&\n      a.top + a.height <= b.top + b.height\n    );\n  };\n\n  /**\n   * Loops through an array of rectangle ids and resets all that are fully\n   * within another rectangle in the array. Resetting in this case means that\n   * the rectangle id value is replaced with zero.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {RectId[]} rectIds\n   * @returns {RectId[]}\n   */\n  Packer.prototype._purgeRects = (function() {\n    var rectA = {};\n    var rectB = {};\n    return function(rectIds) {\n      var i = rectIds.length;\n      var ii;\n\n      while (i--) {\n        ii = rectIds.length;\n        if (!rectIds[i]) continue;\n        this._getRect(rectIds[i], rectA);\n        while (ii--) {\n          if (!rectIds[ii] || i === ii) continue;\n          if (this._isRectWithinRect(rectA, this._getRect(rectIds[ii], rectB))) {\n            rectIds[i] = 0;\n            break;\n          }\n        }\n      }\n\n      return rectIds;\n    };\n  })();\n\n  /**\n   * Sort rectangles with top-left gravity.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {RectId} aId\n   * @param {RectId} bId\n   * @returns {Number}\n   */\n  Packer.prototype._sortRectsTopLeft = (function() {\n    var rectA = {};\n    var rectB = {};\n    return function(aId, bId) {\n      this._getRect(aId, rectA);\n      this._getRect(bId, rectB);\n      // prettier-ignore\n      return rectA.top < rectB.top ? -1 :\n             rectA.top > rectB.top ? 1 :\n             rectA.left < rectB.left ? -1 :\n             rectA.left > rectB.left ? 1 : 0;\n    };\n  })();\n\n  /**\n   * Sort rectangles with left-top gravity.\n   *\n   * @private\n   * @memberof Packer.prototype\n   * @param {RectId} aId\n   * @param {RectId} bId\n   * @returns {Number}\n   */\n  Packer.prototype._sortRectsLeftTop = (function() {\n    var rectA = {};\n    var rectB = {};\n    return function(aId, bId) {\n      this._getRect(aId, rectA);\n      this._getRect(bId, rectB);\n      // prettier-ignore\n      return rectA.left < rectB.left ? -1 :\n             rectA.left > rectB.left ? 1 :\n             rectA.top < rectB.top ? -1 :\n             rectA.top > rectB.top ? 1 : 0;\n    };\n  })();\n\n  var htmlCollectionType = '[object HTMLCollection]';\n  var nodeListType = '[object NodeList]';\n\n  /**\n   * Check if a value is a node list\n   *\n   * @param {*} val\n   * @returns {Boolean}\n   */\n  function isNodeList(val) {\n    var type = Object.prototype.toString.call(val);\n    return type === htmlCollectionType || type === nodeListType;\n  }\n\n  /**\n   * Converts a value to an array or clones an array.\n   *\n   * @param {*} target\n   * @returns {Array}\n   */\n  function toArray(target) {\n    return isNodeList(target) ? Array.prototype.slice.call(target) : Array.prototype.concat(target);\n  }\n\n  var packer = new Packer();\n  var noop = function() {};\n\n  /**\n   * Creates a new Grid instance.\n   *\n   * @class\n   * @param {(HTMLElement|String)} element\n   * @param {Object} [options]\n   * @param {(?HTMLElement[]|NodeList|String)} [options.items]\n   * @param {Number} [options.showDuration=300]\n   * @param {String} [options.showEasing=\"ease\"]\n   * @param {Object} [options.visibleStyles]\n   * @param {Number} [options.hideDuration=300]\n   * @param {String} [options.hideEasing=\"ease\"]\n   * @param {Object} [options.hiddenStyles]\n   * @param {(Function|Object)} [options.layout]\n   * @param {Boolean} [options.layout.fillGaps=false]\n   * @param {Boolean} [options.layout.horizontal=false]\n   * @param {Boolean} [options.layout.alignRight=false]\n   * @param {Boolean} [options.layout.alignBottom=false]\n   * @param {Boolean} [options.layout.rounding=true]\n   * @param {(Boolean|Number)} [options.layoutOnResize=100]\n   * @param {Boolean} [options.layoutOnInit=true]\n   * @param {Number} [options.layoutDuration=300]\n   * @param {String} [options.layoutEasing=\"ease\"]\n   * @param {?Object} [options.sortData=null]\n   * @param {Boolean} [options.dragEnabled=false]\n   * @param {?HtmlElement} [options.dragContainer=null]\n   * @param {?Function} [options.dragStartPredicate]\n   * @param {Number} [options.dragStartPredicate.distance=0]\n   * @param {Number} [options.dragStartPredicate.delay=0]\n   * @param {(Boolean|String)} [options.dragStartPredicate.handle=false]\n   * @param {?String} [options.dragAxis]\n   * @param {(Boolean|Function)} [options.dragSort=true]\n   * @param {Number} [options.dragSortInterval=100]\n   * @param {(Function|Object)} [options.dragSortPredicate]\n   * @param {Number} [options.dragSortPredicate.threshold=50]\n   * @param {String} [options.dragSortPredicate.action=\"move\"]\n   * @param {Number} [options.dragReleaseDuration=300]\n   * @param {String} [options.dragReleaseEasing=\"ease\"]\n   * @param {Object} [options.dragHammerSettings={touchAction: \"none\"}]\n   * @param {String} [options.containerClass=\"muuri\"]\n   * @param {String} [options.itemClass=\"muuri-item\"]\n   * @param {String} [options.itemVisibleClass=\"muuri-item-visible\"]\n   * @param {String} [options.itemHiddenClass=\"muuri-item-hidden\"]\n   * @param {String} [options.itemPositioningClass=\"muuri-item-positioning\"]\n   * @param {String} [options.itemDraggingClass=\"muuri-item-dragging\"]\n   * @param {String} [options.itemReleasingClass=\"muuri-item-releasing\"]\n   */\n  function Grid(element, options) {\n    var inst = this;\n    var settings;\n    var items;\n    var layoutOnResize;\n\n    // Allow passing element as selector string. Store element for instance.\n    element = this._element = typeof element === 'string' ? document.querySelector(element) : element;\n\n    // Throw an error if the container element is not body element or does not\n    // exist within the body element.\n    if (!document.body.contains(element)) {\n      throw new Error('Container element must be an existing DOM element');\n    }\n\n    // Create instance settings by merging the options with default options.\n    settings = this._settings = mergeSettings(Grid.defaultOptions, options);\n\n    // Sanitize dragSort setting.\n    if (typeof settings.dragSort !== 'function') {\n      settings.dragSort = !!settings.dragSort;\n    }\n\n    // Create instance id and store it to the grid instances collection.\n    this._id = createUid();\n    gridInstances[this._id] = inst;\n\n    // Destroyed flag.\n    this._isDestroyed = false;\n\n    // The layout object (mutated on every layout).\n    this._layout = {\n      id: 0,\n      items: [],\n      slots: [],\n      setWidth: false,\n      setHeight: false,\n      width: 0,\n      height: 0\n    };\n\n    // Create private Emitter instance.\n    this._emitter = new Emitter();\n\n    // Add container element's class name.\n    addClass(element, settings.containerClass);\n\n    // Create initial items.\n    this._items = [];\n    items = settings.items;\n    if (typeof items === 'string') {\n      toArray(element.children).forEach(function(itemElement) {\n        if (items === '*' || elementMatches(itemElement, items)) {\n          inst._items.push(new Item(inst, itemElement));\n        }\n      });\n    } else if (Array.isArray(items) || isNodeList(items)) {\n      this._items = toArray(items).map(function(itemElement) {\n        return new Item(inst, itemElement);\n      });\n    }\n\n    // If layoutOnResize option is a valid number sanitize it and bind the resize\n    // handler.\n    layoutOnResize = settings.layoutOnResize;\n    if (typeof layoutOnResize !== 'number') {\n      layoutOnResize = layoutOnResize === true ? 0 : -1;\n    }\n    if (layoutOnResize >= 0) {\n      window.addEventListener(\n        'resize',\n        (inst._resizeHandler = debounce(function() {\n          inst.refreshItems().layout();\n        }, layoutOnResize))\n      );\n    }\n\n    // Layout on init if necessary.\n    if (settings.layoutOnInit) {\n      this.layout(true);\n    }\n  }\n\n  /**\n   * Public properties\n   * *****************\n   */\n\n  /**\n   * @see Item\n   */\n  Grid.Item = Item;\n\n  /**\n   * @see ItemLayout\n   */\n  Grid.ItemLayout = ItemLayout;\n\n  /**\n   * @see ItemVisibility\n   */\n  Grid.ItemVisibility = ItemVisibility;\n\n  /**\n   * @see ItemRelease\n   */\n  Grid.ItemRelease = ItemRelease;\n\n  /**\n   * @see ItemMigrate\n   */\n  Grid.ItemMigrate = ItemMigrate;\n\n  /**\n   * @see ItemAnimate\n   */\n  Grid.ItemAnimate = ItemAnimate;\n\n  /**\n   * @see ItemDrag\n   */\n  Grid.ItemDrag = ItemDrag;\n\n  /**\n   * @see Emitter\n   */\n  Grid.Emitter = Emitter;\n\n  /**\n   * Default options for Grid instance.\n   *\n   * @public\n   * @memberof Grid\n   */\n  Grid.defaultOptions = {\n    // Item elements\n    items: '*',\n\n    // Default show animation\n    showDuration: 300,\n    showEasing: 'ease',\n\n    // Default hide animation\n    hideDuration: 300,\n    hideEasing: 'ease',\n\n    // Item's visible/hidden state styles\n    visibleStyles: {\n      opacity: '1',\n      transform: 'scale(1)'\n    },\n    hiddenStyles: {\n      opacity: '0',\n      transform: 'scale(0.5)'\n    },\n\n    // Layout\n    layout: {\n      fillGaps: false,\n      horizontal: false,\n      alignRight: false,\n      alignBottom: false,\n      rounding: true\n    },\n    layoutOnResize: 100,\n    layoutOnInit: true,\n    layoutDuration: 300,\n    layoutEasing: 'ease',\n\n    // Sorting\n    sortData: null,\n\n    // Drag & Drop\n    dragEnabled: false,\n    dragContainer: null,\n    dragStartPredicate: {\n      distance: 0,\n      delay: 0,\n      handle: false\n    },\n    dragAxis: null,\n    dragSort: true,\n    dragSortInterval: 100,\n    dragSortPredicate: {\n      threshold: 50,\n      action: 'move'\n    },\n    dragReleaseDuration: 300,\n    dragReleaseEasing: 'ease',\n    dragHammerSettings: {\n      touchAction: 'none'\n    },\n\n    // Classnames\n    containerClass: 'muuri',\n    itemClass: 'muuri-item',\n    itemVisibleClass: 'muuri-item-shown',\n    itemHiddenClass: 'muuri-item-hidden',\n    itemPositioningClass: 'muuri-item-positioning',\n    itemDraggingClass: 'muuri-item-dragging',\n    itemReleasingClass: 'muuri-item-releasing'\n  };\n\n  /**\n   * Public prototype methods\n   * ************************\n   */\n\n  /**\n   * Bind an event listener.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {String} event\n   * @param {Function} listener\n   * @returns {Grid}\n   */\n  Grid.prototype.on = function(event, listener) {\n    this._emitter.on(event, listener);\n    return this;\n  };\n\n  /**\n   * Bind an event listener that is triggered only once.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {String} event\n   * @param {Function} listener\n   * @returns {Grid}\n   */\n  Grid.prototype.once = function(event, listener) {\n    this._emitter.once(event, listener);\n    return this;\n  };\n\n  /**\n   * Unbind an event listener.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {String} event\n   * @param {Function} listener\n   * @returns {Grid}\n   */\n  Grid.prototype.off = function(event, listener) {\n    this._emitter.off(event, listener);\n    return this;\n  };\n\n  /**\n   * Get the container element.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @returns {HTMLElement}\n   */\n  Grid.prototype.getElement = function() {\n    return this._element;\n  };\n\n  /**\n   * Get all items. Optionally you can provide specific targets (elements and\n   * indices). Note that the returned array is not the same object used by the\n   * instance so modifying it will not affect instance's items. All items that\n   * are not found are omitted from the returned array.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} [targets]\n   * @returns {Item[]}\n   */\n  Grid.prototype.getItems = function(targets) {\n    // Return all items immediately if no targets were provided or if the\n    // instance is destroyed.\n    if (this._isDestroyed || (!targets && targets !== 0)) {\n      return this._items.slice(0);\n    }\n\n    var ret = [];\n    var targetItems = toArray(targets);\n    var item;\n    var i;\n\n    // If target items are defined return filtered results.\n    for (i = 0; i < targetItems.length; i++) {\n      item = this._getItem(targetItems[i]);\n      item && ret.push(item);\n    }\n\n    return ret;\n  };\n\n  /**\n   * Update the cached dimensions of the instance's items.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} [items]\n   * @returns {Grid}\n   */\n  Grid.prototype.refreshItems = function(items) {\n    if (this._isDestroyed) return this;\n\n    var targets = this.getItems(items);\n    var i;\n\n    for (i = 0; i < targets.length; i++) {\n      targets[i]._refreshDimensions();\n    }\n\n    return this;\n  };\n\n  /**\n   * Update the sort data of the instance's items.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} [items]\n   * @returns {Grid}\n   */\n  Grid.prototype.refreshSortData = function(items) {\n    if (this._isDestroyed) return this;\n\n    var targetItems = this.getItems(items);\n    var i;\n\n    for (i = 0; i < targetItems.length; i++) {\n      targetItems[i]._refreshSortData();\n    }\n\n    return this;\n  };\n\n  /**\n   * Synchronize the item elements to match the order of the items in the DOM.\n   * This comes handy if you need to keep the DOM structure matched with the\n   * order of the items. Note that if an item's element is not currently a child\n   * of the container element (if it is dragged for example) it is ignored and\n   * left untouched.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @returns {Grid}\n   */\n  Grid.prototype.synchronize = function() {\n    if (this._isDestroyed) return this;\n\n    var container = this._element;\n    var items = this._items;\n    var fragment;\n    var element;\n    var i;\n\n    // Append all elements in order to the container element.\n    if (items.length) {\n      for (i = 0; i < items.length; i++) {\n        element = items[i]._element;\n        if (element.parentNode === container) {\n          fragment = fragment || document.createDocumentFragment();\n          fragment.appendChild(element);\n        }\n      }\n\n      if (fragment) container.appendChild(fragment);\n    }\n\n    // Emit synchronize event.\n    this._emit(eventSynchronize);\n\n    return this;\n  };\n\n  /**\n   * Calculate and apply item positions.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {Boolean} [instant=false]\n   * @param {LayoutCallback} [onFinish]\n   * @returns {Grid}\n   */\n  Grid.prototype.layout = function(instant, onFinish) {\n    if (this._isDestroyed) return this;\n\n    var inst = this;\n    var element = this._element;\n    var layout = this._updateLayout();\n    var layoutId = layout.id;\n    var itemsLength = layout.items.length;\n    var counter = itemsLength;\n    var callback = typeof instant === 'function' ? instant : onFinish;\n    var isCallbackFunction = typeof callback === 'function';\n    var callbackItems = isCallbackFunction ? layout.items.slice(0) : null;\n    var isBorderBox;\n    var item;\n    var i;\n\n    // The finish function, which will be used for checking if all the items\n    // have laid out yet. After all items have finished their animations call\n    // callback and emit layoutEnd event. Only emit layoutEnd event if there\n    // hasn't been a new layout call during this layout.\n    function tryFinish() {\n      if (--counter > 0) return;\n      var hasLayoutChanged = inst._layout.id !== layoutId;\n      isCallbackFunction && callback(hasLayoutChanged, callbackItems);\n      if (!hasLayoutChanged && inst._hasListeners(eventLayoutEnd)) {\n        inst._emit(eventLayoutEnd, layout.items.slice(0));\n      }\n    }\n\n    // If grid's width or height was modified, we need to update it's cached\n    // dimensions. Also keep in mind that grid's cached width/height should\n    // always equal to what elem.getBoundingClientRect() would return, so\n    // therefore we need to add the grid element's borders to the dimensions if\n    // it's box-sizing is border-box.\n    if (\n      (layout.setHeight && typeof layout.height === 'number') ||\n      (layout.setWidth && typeof layout.width === 'number')\n    ) {\n      isBorderBox = getStyle(element, 'box-sizing') === 'border-box';\n    }\n    if (layout.setHeight) {\n      if (typeof layout.height === 'number') {\n        element.style.height =\n          (isBorderBox ? layout.height + this._borderTop + this._borderBottom : layout.height) + 'px';\n      } else {\n        element.style.height = layout.height;\n      }\n    }\n    if (layout.setWidth) {\n      if (typeof layout.width === 'number') {\n        element.style.width =\n          (isBorderBox ? layout.width + this._borderLeft + this._borderRight : layout.width) + 'px';\n      } else {\n        element.style.width = layout.width;\n      }\n    }\n\n    // Emit layoutStart event. Note that this is intentionally emitted after the\n    // container element's dimensions are set, because otherwise there would be\n    // no hook for reacting to container dimension changes.\n    if (this._hasListeners(eventLayoutStart)) {\n      this._emit(eventLayoutStart, layout.items.slice(0));\n    }\n\n    // If there are no items let's finish quickly.\n    if (!itemsLength) {\n      tryFinish();\n      return this;\n    }\n\n    // If there are items let's position them.\n    for (i = 0; i < itemsLength; i++) {\n      item = layout.items[i];\n      if (!item) continue;\n\n      // Update item's position.\n      item._left = layout.slots[i * 2];\n      item._top = layout.slots[i * 2 + 1];\n\n      // Layout item if it is not dragged.\n      item.isDragging() ? tryFinish() : item._layout.start(instant === true, tryFinish);\n    }\n\n    return this;\n  };\n\n  /**\n   * Add new items by providing the elements you wish to add to the instance and\n   * optionally provide the index where you want the items to be inserted into.\n   * All elements that are not already children of the container element will be\n   * automatically appended to the container element. If an element has it's CSS\n   * display property set to \"none\" it will be marked as inactive during the\n   * initiation process. As long as the item is inactive it will not be part of\n   * the layout, but it will retain it's index. You can activate items at any\n   * point with grid.show() method. This method will automatically call\n   * grid.layout() if one or more of the added elements are visible. If only\n   * hidden items are added no layout will be called. All the new visible items\n   * are positioned without animation during their first layout.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {(HTMLElement|HTMLElement[])} elements\n   * @param {Object} [options]\n   * @param {Number} [options.index=-1]\n   * @param {Boolean} [options.isActive]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Item[]}\n   */\n  Grid.prototype.add = function(elements, options) {\n    if (this._isDestroyed || !elements) return [];\n\n    var newItems = toArray(elements);\n    if (!newItems.length) return newItems;\n\n    var opts = options || 0;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var items = this._items;\n    var needsLayout = false;\n    var item;\n    var i;\n\n    // Map provided elements into new grid items.\n    for (i = 0; i < newItems.length; i++) {\n      item = new Item(this, newItems[i], opts.isActive);\n      newItems[i] = item;\n\n      // If the item to be added is active, we need to do a layout. Also, we\n      // need to mark the item with the skipNextAnimation flag to make it\n      // position instantly (without animation) during the next layout. Without\n      // the hack the item would animate to it's new position from the northwest\n      // corner of the grid, which feels a bit buggy (imho).\n      if (item._isActive) {\n        needsLayout = true;\n        item._layout._skipNextAnimation = true;\n      }\n    }\n\n    // Add the new items to the items collection to correct index.\n    arrayInsert(items, newItems, opts.index);\n\n    // Emit add event.\n    if (this._hasListeners(eventAdd)) {\n      this._emit(eventAdd, newItems.slice(0));\n    }\n\n    // If layout is needed.\n    if (needsLayout && layout) {\n      this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n    }\n\n    return newItems;\n  };\n\n  /**\n   * Remove items from the instance.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} items\n   * @param {Object} [options]\n   * @param {Boolean} [options.removeElements=false]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Item[]}\n   */\n  Grid.prototype.remove = function(items, options) {\n    if (this._isDestroyed) return this;\n\n    var opts = options || 0;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var needsLayout = false;\n    var allItems = this.getItems();\n    var targetItems = this.getItems(items);\n    var indices = [];\n    var item;\n    var i;\n\n    // Remove the individual items.\n    for (i = 0; i < targetItems.length; i++) {\n      item = targetItems[i];\n      indices.push(allItems.indexOf(item));\n      if (item._isActive) needsLayout = true;\n      item._destroy(opts.removeElements);\n    }\n\n    // Emit remove event.\n    if (this._hasListeners(eventRemove)) {\n      this._emit(eventRemove, targetItems.slice(0), indices);\n    }\n\n    // If layout is needed.\n    if (needsLayout && layout) {\n      this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n    }\n\n    return targetItems;\n  };\n\n  /**\n   * Show instance items.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} items\n   * @param {Object} [options]\n   * @param {Boolean} [options.instant=false]\n   * @param {ShowCallback} [options.onFinish]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.show = function(items, options) {\n    if (this._isDestroyed) return this;\n    this._setItemsVisibility(items, true, options);\n    return this;\n  };\n\n  /**\n   * Hide instance items.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} items\n   * @param {Object} [options]\n   * @param {Boolean} [options.instant=false]\n   * @param {HideCallback} [options.onFinish]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.hide = function(items, options) {\n    if (this._isDestroyed) return this;\n    this._setItemsVisibility(items, false, options);\n    return this;\n  };\n\n  /**\n   * Filter items. Expects at least one argument, a predicate, which should be\n   * either a function or a string. The predicate callback is executed for every\n   * item in the instance. If the return value of the predicate is truthy the\n   * item in question will be shown and otherwise hidden. The predicate callback\n   * receives the item instance as it's argument. If the predicate is a string\n   * it is considered to be a selector and it is checked against every item\n   * element in the instance with the native element.matches() method. All the\n   * matching items will be shown and others hidden.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {(Function|String)} predicate\n   * @param {Object} [options]\n   * @param {Boolean} [options.instant=false]\n   * @param {FilterCallback} [options.onFinish]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.filter = function(predicate, options) {\n    if (this._isDestroyed || !this._items.length) return this;\n\n    var itemsToShow = [];\n    var itemsToHide = [];\n    var isPredicateString = typeof predicate === 'string';\n    var isPredicateFn = typeof predicate === 'function';\n    var opts = options || 0;\n    var isInstant = opts.instant === true;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var onFinish = typeof opts.onFinish === 'function' ? opts.onFinish : null;\n    var tryFinishCounter = -1;\n    var tryFinish = noop;\n    var item;\n    var i;\n\n    // If we have onFinish callback, let's create proper tryFinish callback.\n    if (onFinish) {\n      tryFinish = function() {\n        ++tryFinishCounter && onFinish(itemsToShow.slice(0), itemsToHide.slice(0));\n      };\n    }\n\n    // Check which items need to be shown and which hidden.\n    if (isPredicateFn || isPredicateString) {\n      for (i = 0; i < this._items.length; i++) {\n        item = this._items[i];\n        if (isPredicateFn ? predicate(item) : elementMatches(item._element, predicate)) {\n          itemsToShow.push(item);\n        } else {\n          itemsToHide.push(item);\n        }\n      }\n    }\n\n    // Show items that need to be shown.\n    if (itemsToShow.length) {\n      this.show(itemsToShow, {\n        instant: isInstant,\n        onFinish: tryFinish,\n        layout: false\n      });\n    } else {\n      tryFinish();\n    }\n\n    // Hide items that need to be hidden.\n    if (itemsToHide.length) {\n      this.hide(itemsToHide, {\n        instant: isInstant,\n        onFinish: tryFinish,\n        layout: false\n      });\n    } else {\n      tryFinish();\n    }\n\n    // If there are any items to filter.\n    if (itemsToShow.length || itemsToHide.length) {\n      // Emit filter event.\n      if (this._hasListeners(eventFilter)) {\n        this._emit(eventFilter, itemsToShow.slice(0), itemsToHide.slice(0));\n      }\n\n      // If layout is needed.\n      if (layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Sort items. There are three ways to sort the items. The first is simply by\n   * providing a function as the comparer which works identically to native\n   * array sort. Alternatively you can sort by the sort data you have provided\n   * in the instance's options. Just provide the sort data key(s) as a string\n   * (separated by space) and the items will be sorted based on the provided\n   * sort data keys. Lastly you have the opportunity to provide a presorted\n   * array of items which will be used to sync the internal items array in the\n   * same order.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {(Function|Item[]|String|String[])} comparer\n   * @param {Object} [options]\n   * @param {Boolean} [options.descending=false]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.sort = (function() {\n    var sortComparer;\n    var isDescending;\n    var origItems;\n    var indexMap;\n\n    function parseCriteria(data) {\n      return data\n        .trim()\n        .split(' ')\n        .map(function(val) {\n          return val.split(':');\n        });\n    }\n\n    function getIndexMap(items) {\n      var ret = {};\n      for (var i = 0; i < items.length; i++) {\n        ret[items[i]._id] = i;\n      }\n      return ret;\n    }\n\n    function compareIndices(itemA, itemB) {\n      var indexA = indexMap[itemA._id];\n      var indexB = indexMap[itemB._id];\n      return isDescending ? indexB - indexA : indexA - indexB;\n    }\n\n    function defaultComparer(a, b) {\n      var result = 0;\n      var criteriaName;\n      var criteriaOrder;\n      var valA;\n      var valB;\n\n      // Loop through the list of sort criteria.\n      for (var i = 0; i < sortComparer.length; i++) {\n        // Get the criteria name, which should match an item's sort data key.\n        criteriaName = sortComparer[i][0];\n        criteriaOrder = sortComparer[i][1];\n\n        // Get items' cached sort values for the criteria. If the item has no sort\n        // data let's update the items sort data (this is a lazy load mechanism).\n        valA = (a._sortData ? a : a._refreshSortData())._sortData[criteriaName];\n        valB = (b._sortData ? b : b._refreshSortData())._sortData[criteriaName];\n\n        // Sort the items in descending order if defined so explicitly. Otherwise\n        // sort items in ascending order.\n        if (criteriaOrder === 'desc' || (!criteriaOrder && isDescending)) {\n          result = valB < valA ? -1 : valB > valA ? 1 : 0;\n        } else {\n          result = valA < valB ? -1 : valA > valB ? 1 : 0;\n        }\n\n        // If we have -1 or 1 as the return value, let's return it immediately.\n        if (result) return result;\n      }\n\n      // If values are equal let's compare the item indices to make sure we\n      // have a stable sort.\n      if (!result) {\n        if (!indexMap) indexMap = getIndexMap(origItems);\n        result = compareIndices(a, b);\n      }\n      return result;\n    }\n\n    function customComparer(a, b) {\n      var result = sortComparer(a, b);\n      // If descending let's invert the result value.\n      if (isDescending && result) result = -result;\n      // If we have a valid result (not zero) let's return it right away.\n      if (result) return result;\n      // If result is zero let's compare the item indices to make sure we have a\n      // stable sort.\n      if (!indexMap) indexMap = getIndexMap(origItems);\n      return compareIndices(a, b);\n    }\n\n    return function(comparer, options) {\n      if (this._isDestroyed || this._items.length < 2) return this;\n\n      var items = this._items;\n      var opts = options || 0;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var i;\n\n      // Setup parent scope data.\n      sortComparer = comparer;\n      isDescending = !!opts.descending;\n      origItems = items.slice(0);\n      indexMap = null;\n\n      // If function is provided do a native array sort.\n      if (typeof sortComparer === 'function') {\n        items.sort(customComparer);\n      }\n      // Otherwise if we got a string, let's sort by the sort data as provided in\n      // the instance's options.\n      else if (typeof sortComparer === 'string') {\n        sortComparer = parseCriteria(comparer);\n        items.sort(defaultComparer);\n      }\n      // Otherwise if we got an array, let's assume it's a presorted array of the\n      // items and order the items based on it.\n      else if (Array.isArray(sortComparer)) {\n        if (sortComparer.length !== items.length) {\n          throw new Error('[' + namespace + '] sort reference items do not match with grid items.');\n        }\n        for (i = 0; i < items.length; i++) {\n          if (sortComparer.indexOf(items[i]) < 0) {\n            throw new Error('[' + namespace + '] sort reference items do not match with grid items.');\n          }\n          items[i] = sortComparer[i];\n        }\n        if (isDescending) items.reverse();\n      }\n      // Otherwise let's just skip it, nothing we can do here.\n      else {\n        /** @todo Maybe throw an error here? */\n        return this;\n      }\n\n      // Emit sort event.\n      if (this._hasListeners(eventSort)) {\n        this._emit(eventSort, items.slice(0), origItems);\n      }\n\n      // If layout is needed.\n      if (layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n\n      return this;\n    };\n  })();\n\n  /**\n   * Move item to another index or in place of another item.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridSingleItemQuery} item\n   * @param {GridSingleItemQuery} position\n   * @param {Object} [options]\n   * @param {String} [options.action=\"move\"]\n   *   - Accepts either \"move\" or \"swap\".\n   *   - \"move\" moves the item in place of the other item.\n   *   - \"swap\" swaps the position of the items.\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.move = function(item, position, options) {\n    if (this._isDestroyed || this._items.length < 2) return this;\n\n    var items = this._items;\n    var opts = options || 0;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var isSwap = opts.action === 'swap';\n    var action = isSwap ? 'swap' : 'move';\n    var fromItem = this._getItem(item);\n    var toItem = this._getItem(position);\n    var fromIndex;\n    var toIndex;\n\n    // Make sure the items exist and are not the same.\n    if (fromItem && toItem && fromItem !== toItem) {\n      // Get the indices of the items.\n      fromIndex = items.indexOf(fromItem);\n      toIndex = items.indexOf(toItem);\n\n      // Do the move/swap.\n      if (isSwap) {\n        arraySwap(items, fromIndex, toIndex);\n      } else {\n        arrayMove(items, fromIndex, toIndex);\n      }\n\n      // Emit move event.\n      if (this._hasListeners(eventMove)) {\n        this._emit(eventMove, {\n          item: fromItem,\n          fromIndex: fromIndex,\n          toIndex: toIndex,\n          action: action\n        });\n      }\n\n      // If layout is needed.\n      if (layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Send item to another Grid instance.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {GridSingleItemQuery} item\n   * @param {Grid} grid\n   * @param {GridSingleItemQuery} position\n   * @param {Object} [options]\n   * @param {HTMLElement} [options.appendTo=document.body]\n   * @param {(Boolean|LayoutCallback|String)} [options.layoutSender=true]\n   * @param {(Boolean|LayoutCallback|String)} [options.layoutReceiver=true]\n   * @returns {Grid}\n   */\n  Grid.prototype.send = function(item, grid, position, options) {\n    if (this._isDestroyed || grid._isDestroyed || this === grid) return this;\n\n    // Make sure we have a valid target item.\n    item = this._getItem(item);\n    if (!item) return this;\n\n    var opts = options || 0;\n    var container = opts.appendTo || document.body;\n    var layoutSender = opts.layoutSender ? opts.layoutSender : opts.layoutSender === undefined;\n    var layoutReceiver = opts.layoutReceiver\n      ? opts.layoutReceiver\n      : opts.layoutReceiver === undefined;\n\n    // Start the migration process.\n    item._migrate.start(grid, position, container);\n\n    // If migration was started successfully and the item is active, let's layout\n    // the grids.\n    if (item._migrate._isActive && item._isActive) {\n      if (layoutSender) {\n        this.layout(\n          layoutSender === 'instant',\n          typeof layoutSender === 'function' ? layoutSender : undefined\n        );\n      }\n      if (layoutReceiver) {\n        grid.layout(\n          layoutReceiver === 'instant',\n          typeof layoutReceiver === 'function' ? layoutReceiver : undefined\n        );\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Destroy the instance.\n   *\n   * @public\n   * @memberof Grid.prototype\n   * @param {Boolean} [removeElements=false]\n   * @returns {Grid}\n   */\n  Grid.prototype.destroy = function(removeElements) {\n    if (this._isDestroyed) return this;\n\n    var container = this._element;\n    var items = this._items.slice(0);\n    var i;\n\n    // Unbind window resize event listener.\n    if (this._resizeHandler) {\n      window.removeEventListener('resize', this._resizeHandler);\n    }\n\n    // Destroy items.\n    for (i = 0; i < items.length; i++) {\n      items[i]._destroy(removeElements);\n    }\n\n    // Restore container.\n    removeClass(container, this._settings.containerClass);\n    container.style.height = '';\n    container.style.width = '';\n\n    // Emit destroy event and unbind all events.\n    this._emit(eventDestroy);\n    this._emitter.destroy();\n\n    // Remove reference from the grid instances collection.\n    gridInstances[this._id] = undefined;\n\n    // Flag instance as destroyed.\n    this._isDestroyed = true;\n\n    return this;\n  };\n\n  /**\n   * Private prototype methods\n   * *************************\n   */\n\n  /**\n   * Get instance's item by element or by index. Target can also be an Item\n   * instance in which case the function returns the item if it exists within\n   * related Grid instance. If nothing is found with the provided target, null\n   * is returned.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @param {GridSingleItemQuery} [target]\n   * @returns {?Item}\n   */\n  Grid.prototype._getItem = function(target) {\n    // If no target is specified or the instance is destroyed, return null.\n    if (this._isDestroyed || (!target && target !== 0)) {\n      return null;\n    }\n\n    // If target is number return the item in that index. If the number is lower\n    // than zero look for the item starting from the end of the items array. For\n    // example -1 for the last item, -2 for the second last item, etc.\n    if (typeof target === 'number') {\n      return this._items[target > -1 ? target : this._items.length + target] || null;\n    }\n\n    // If the target is an instance of Item return it if it is attached to this\n    // Grid instance, otherwise return null.\n    if (target instanceof Item) {\n      return target._gridId === this._id ? target : null;\n    }\n\n    // In other cases let's assume that the target is an element, so let's try\n    // to find an item that matches the element and return it. If item is not\n    // found return null.\n    /** @todo This could be made a lot faster by using Map/WeakMap of elements. */\n    for (var i = 0; i < this._items.length; i++) {\n      if (this._items[i]._element === target) {\n        return this._items[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Recalculates and updates instance's layout data.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @returns {LayoutData}\n   */\n  Grid.prototype._updateLayout = function() {\n    var layout = this._layout;\n    var settings = this._settings.layout;\n    var width;\n    var height;\n    var newLayout;\n    var i;\n\n    // Let's increment layout id.\n    ++layout.id;\n\n    // Let's update layout items\n    layout.items.length = 0;\n    for (i = 0; i < this._items.length; i++) {\n      if (this._items[i]._isActive) layout.items.push(this._items[i]);\n    }\n\n    // Let's make sure we have the correct container dimensions.\n    this._refreshDimensions();\n\n    // Calculate container width and height (without borders).\n    width = this._width - this._borderLeft - this._borderRight;\n    height = this._height - this._borderTop - this._borderBottom;\n\n    // Calculate new layout.\n    if (typeof settings === 'function') {\n      newLayout = settings(layout.items, width, height);\n    } else {\n      newLayout = packer.getLayout(layout.items, width, height, layout.slots, settings);\n    }\n\n    // Let's update the grid's layout.\n    layout.slots = newLayout.slots;\n    layout.setWidth = Boolean(newLayout.setWidth);\n    layout.setHeight = Boolean(newLayout.setHeight);\n    layout.width = newLayout.width;\n    layout.height = newLayout.height;\n\n    return layout;\n  };\n\n  /**\n   * Emit a grid event.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @param {String} event\n   * @param {...*} [arg]\n   */\n  Grid.prototype._emit = function() {\n    if (this._isDestroyed) return;\n    this._emitter.emit.apply(this._emitter, arguments);\n  };\n\n  /**\n   * Check if there are any events listeners for an event.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @param {String} event\n   * @returns {Boolean}\n   */\n  Grid.prototype._hasListeners = function(event) {\n    var listeners = this._emitter._events[event];\n    return !!(listeners && listeners.length);\n  };\n\n  /**\n   * Update container's width, height and offsets.\n   *\n   * @private\n   * @memberof Grid.prototype\n   */\n  Grid.prototype._updateBoundingRect = function() {\n    var element = this._element;\n    var rect = element.getBoundingClientRect();\n    this._width = rect.width;\n    this._height = rect.height;\n    this._left = rect.left;\n    this._top = rect.top;\n  };\n\n  /**\n   * Update container's border sizes.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @param {Boolean} left\n   * @param {Boolean} right\n   * @param {Boolean} top\n   * @param {Boolean} bottom\n   */\n  Grid.prototype._updateBorders = function(left, right, top, bottom) {\n    var element = this._element;\n    if (left) this._borderLeft = getStyleAsFloat(element, 'border-left-width');\n    if (right) this._borderRight = getStyleAsFloat(element, 'border-right-width');\n    if (top) this._borderTop = getStyleAsFloat(element, 'border-top-width');\n    if (bottom) this._borderBottom = getStyleAsFloat(element, 'border-bottom-width');\n  };\n\n  /**\n   * Refresh all of container's internal dimensions and offsets.\n   *\n   * @private\n   * @memberof Grid.prototype\n   */\n  Grid.prototype._refreshDimensions = function() {\n    this._updateBoundingRect();\n    this._updateBorders(1, 1, 1, 1);\n  };\n\n  /**\n   * Show or hide Grid instance's items.\n   *\n   * @private\n   * @memberof Grid.prototype\n   * @param {GridMultiItemQuery} items\n   * @param {Boolean} toVisible\n   * @param {Object} [options]\n   * @param {Boolean} [options.instant=false]\n   * @param {(ShowCallback|HideCallback)} [options.onFinish]\n   * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\n   */\n  Grid.prototype._setItemsVisibility = function(items, toVisible, options) {\n    var grid = this;\n    var targetItems = this.getItems(items);\n    var opts = options || 0;\n    var isInstant = opts.instant === true;\n    var callback = opts.onFinish;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var counter = targetItems.length;\n    var startEvent = toVisible ? eventShowStart : eventHideStart;\n    var endEvent = toVisible ? eventShowEnd : eventHideEnd;\n    var method = toVisible ? 'show' : 'hide';\n    var needsLayout = false;\n    var completedItems = [];\n    var hiddenItems = [];\n    var item;\n    var i;\n\n    // If there are no items call the callback, but don't emit any events.\n    if (!counter) {\n      if (typeof callback === 'function') callback(targetItems);\n      return;\n    }\n\n    // Emit showStart/hideStart event.\n    if (this._hasListeners(startEvent)) {\n      this._emit(startEvent, targetItems.slice(0));\n    }\n\n    // Show/hide items.\n    for (i = 0; i < targetItems.length; i++) {\n      item = targetItems[i];\n\n      // If inactive item is shown or active item is hidden we need to do\n      // layout.\n      if ((toVisible && !item._isActive) || (!toVisible && item._isActive)) {\n        needsLayout = true;\n      }\n\n      // If inactive item is shown we also need to do a little hack to make the\n      // item not animate it's next positioning (layout).\n      if (toVisible && !item._isActive) {\n        item._layout._skipNextAnimation = true;\n      }\n\n      // If a hidden item is being shown we need to refresh the item's\n      // dimensions.\n      if (toVisible && item._visibility._isHidden) {\n        hiddenItems.push(item);\n      }\n\n      // Show/hide the item.\n      item._visibility[method](isInstant, function(interrupted, item) {\n        // If the current item's animation was not interrupted add it to the\n        // completedItems array.\n        if (!interrupted) completedItems.push(item);\n\n        // If all items have finished their animations call the callback\n        // and emit showEnd/hideEnd event.\n        if (--counter < 1) {\n          if (typeof callback === 'function') callback(completedItems.slice(0));\n          if (grid._hasListeners(endEvent)) grid._emit(endEvent, completedItems.slice(0));\n        }\n      });\n    }\n\n    // Refresh hidden items.\n    if (hiddenItems.length) this.refreshItems(hiddenItems);\n\n    // Layout if needed.\n    if (needsLayout && layout) {\n      this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n    }\n  };\n\n  /**\n   * Private helpers\n   * ***************\n   */\n\n  /**\n   * Merge default settings with user settings. The returned object is a new\n   * object with merged values. The merging is a deep merge meaning that all\n   * objects and arrays within the provided settings objects will be also merged\n   * so that modifying the values of the settings object will have no effect on\n   * the returned object.\n   *\n   * @param {Object} defaultSettings\n   * @param {Object} [userSettings]\n   * @returns {Object} Returns a new object.\n   */\n  function mergeSettings(defaultSettings, userSettings) {\n    // Create a fresh copy of default settings.\n    var ret = mergeObjects({}, defaultSettings);\n\n    // Merge user settings to default settings.\n    if (userSettings) {\n      ret = mergeObjects(ret, userSettings);\n    }\n\n    // Handle visible/hidden styles manually so that the whole object is\n    // overridden instead of the props.\n    ret.visibleStyles = (userSettings || 0).visibleStyles || (defaultSettings || 0).visibleStyles;\n    ret.hiddenStyles = (userSettings || 0).hiddenStyles || (defaultSettings || 0).hiddenStyles;\n\n    return ret;\n  }\n\n  /**\n   * Merge two objects recursively (deep merge). The source object's properties\n   * are merged to the target object.\n   *\n   * @param {Object} target\n   *   - The target object.\n   * @param {Object} source\n   *   - The source object.\n   * @returns {Object} Returns the target object.\n   */\n  function mergeObjects(target, source) {\n    var sourceKeys = Object.keys(source);\n    var length = sourceKeys.length;\n    var isSourceObject;\n    var propName;\n    var i;\n\n    for (i = 0; i < length; i++) {\n      propName = sourceKeys[i];\n      isSourceObject = isPlainObject(source[propName]);\n\n      // If target and source values are both objects, merge the objects and\n      // assign the merged value to the target property.\n      if (isPlainObject(target[propName]) && isSourceObject) {\n        target[propName] = mergeObjects(mergeObjects({}, target[propName]), source[propName]);\n        continue;\n      }\n\n      // If source's value is object and target's is not let's clone the object as\n      // the target's value.\n      if (isSourceObject) {\n        target[propName] = mergeObjects({}, source[propName]);\n        continue;\n      }\n\n      // If source's value is an array let's clone the array as the target's\n      // value.\n      if (Array.isArray(source[propName])) {\n        target[propName] = source[propName].slice(0);\n        continue;\n      }\n\n      // In all other cases let's just directly assign the source's value as the\n      // target's value.\n      target[propName] = source[propName];\n    }\n\n    return target;\n  }\n\n  return Grid;\n\n})));\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","require('./_wks-define')('asyncIterator');\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","'use strict';\nvar $export = require('./_export');\nvar $forEach = require('./_array-methods')(0);\nvar STRICT = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}